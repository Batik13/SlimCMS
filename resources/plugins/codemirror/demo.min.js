!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e() : "function" == typeof define && define.amd ? define(e) : e()
}(0, function() {
    "use strict";
    var t = function(e, n) {
        return (t = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e
        }
        || function(t, e) {
            for (var n in e)
                e.hasOwnProperty(n) && (t[n] = e[n])
        }
        )(e, n)
    };
    function e(e, n) {
        t(e, n);
        function i() {
            this.constructor = e
        }
        e.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype,
        new i)
    }
    var n = 256
      , i = "undefined" == typeof Symbol ? "__iterator" : Symbol.iterator
      , r = function() {
        function t(t, e) {
            this.line = t,
            this.col = e
        }
        return t.prototype.toString = function() {
            return this.line + ":" + this.col
        }
        ,
        t
    }()
      , o = function() {
        function t() {}
        return t.prototype.lineEnd = function(t) {
            return t == this.lineBreaks + 1 ? this.length : this.lineStart(t + 1) - 1
        }
        ,
        Object.defineProperty(t.prototype, "lines", {
            get: function() {
                return this.lineBreaks + 1
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.iter = function(t) {
            return void 0 === t && (t = 1),
            new f(this,t)
        }
        ,
        t.prototype.iterRange = function(t, e) {
            return void 0 === e && (e = this.length),
            new p(this,t,e)
        }
        ,
        t.prototype[i] = function() {
            var t = new f(this)
              , e = {
                done: !1,
                value: ""
            };
            return {
                next: function() {
                    return e.value = t.next(),
                    e.done = e.value.length > 0,
                    e
                }
            }
        }
        ,
        t.prototype.toString = function() {
            return this.text
        }
        ,
        t.create = function(t) {
            return t.length < 512 ? new l(t) : c.from(t.length, l.split(t, []))
        }
        ,
        t
    }()
      , s = 10;
    function a(t, e) {
        void 0 === e && (e = 0);
        for (var n = e; n < t.length; n++)
            if (t.charCodeAt(n) == s)
                return n;
        return -1
    }
    var h = function() {
        function t(t) {
            this.cursor = t,
            this.buf = ""
        }
        return t.prototype.next = function(t) {
            for (var e, n = a(this.buf), i = this.buf; -1 == n && (e = this.cursor.next()); )
                -1 != (n = a(e)) && (n += i.length),
                i += e;
            return -1 == n && (n = i.length),
            this.buf = i.substr(n + 1),
            i = i.substr(0, n),
            t && (i = i.substr(t)),
            i
        }
        ,
        t
    }()
      , l = function(t) {
        e(i, t);
        function i(e) {
            var n = t.call(this) || this;
            n.text = e;
            for (var i = 0, r = 0, o = void 0; (o = a(e, r)) > -1; r = o + 1)
                i++;
            return n.lineBreaks = i,
            n
        }
        return Object.defineProperty(i.prototype, "length", {
            get: function() {
                return this.text.length
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "children", {
            get: function() {
                return null
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.replace = function(t, e, n) {
            return o.create(this.text.slice(0, t) + n + this.text.slice(e))
        }
        ,
        i.prototype.slice = function(t, e) {
            return void 0 === e && (e = this.text.length),
            this.text.slice(t, e)
        }
        ,
        i.prototype.lineStart = function(t) {
            for (var e = 1, n = 0; ; e++) {
                if (e == t)
                    return n;
                var i = a(this.text, n);
                if (i < 0)
                    throw new RangeError("No line " + t + " in document");
                n = i + 1
            }
        }
        ,
        i.prototype.lineStartAt = function(t) {
            for (var e = 0; ; ) {
                var n = a(this.text, e);
                if (n < 0 || n >= t)
                    return e;
                e = n + 1
            }
        }
        ,
        i.prototype.lineEndAt = function(t) {
            for (var e = 0; ; ) {
                var n = a(this.text, e);
                if (n < 0)
                    return this.length;
                if (n >= t)
                    return n;
                e = n + 1
            }
        }
        ,
        i.prototype.linePos = function(t) {
            if (t > this.length)
                throw new RangeError("Position " + t + " outside of document");
            for (var e = 1, n = 0; ; e++) {
                var i = a(this.text, n);
                if (-1 == i || i >= t)
                    return new r(e,t - n);
                n = i + 1
            }
        }
        ,
        i.prototype.getLine = function(t) {
            var e = this.lineStart(t)
              , n = a(this.text, e);
            return this.text.slice(e, n < 0 ? this.text.length : n)
        }
        ,
        i.prototype.eq = function(t) {
            return t == this || (t instanceof i ? this.text == t.text : u(this, t))
        }
        ,
        i.prototype.decomposeStart = function(t, e) {
            e.push(new i(this.text.slice(0, t)))
        }
        ,
        i.prototype.decomposeEnd = function(t, e) {
            e.push(new i(this.text.slice(t)))
        }
        ,
        i.prototype.lastLineLength = function() {
            return this.length - (this.lineBreaks ? function(t) {
                for (var e = t.length - 1; e >= 0; e--)
                    if (t.charCodeAt(e) == s)
                        return e;
                return -1
            }(this.text) + 1 : 0)
        }
        ,
        i.prototype.firstLineLength = function() {
            return this.lineBreaks ? a(this.text) : this.length
        }
        ,
        i.split = function(t, e) {
            for (var r = 0; ; ) {
                if (r + 512 > t.length) {
                    e.push(new i(t.slice(r)));
                    break
                }
                var o = r + n
                  , s = t.charCodeAt(o);
                s >= 56320 && s < 57344 && o++,
                e.push(new i(t.slice(r, o))),
                r = o
            }
            return e
        }
        ,
        i
    }(o)
      , c = function(t) {
        e(i, t);
        function i(e, n) {
            var i = t.call(this) || this;
            i.length = e,
            i.children = n;
            for (var r = 0, o = 0, s = n; o < s.length; o++) {
                r += s[o].lineBreaks
            }
            return i.lineBreaks = r,
            i
        }
        return Object.defineProperty(i.prototype, "text", {
            get: function() {
                for (var t = "", e = 0, n = this.children; e < n.length; e++) {
                    t += n[e].text
                }
                return t
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.replace = function(t, e, r) {
            var o = r.length - (e - t)
              , s = this.length + o;
            if (s <= n)
                return new l(this.slice(0, t) + r + this.slice(e));
            for (var a, h = 0, c = 0; h < this.children.length; h++) {
                var u = this.children[h]
                  , f = c + u.length;
                if (t >= c && e <= f && (o > 0 ? u.length + o < Math.max(s >> 2, 512) : u.length + o > s >> 4))
                    return (a = this.children.slice())[h] = u.replace(t - c, e - c, r),
                    new i(s,a);
                f >= t && (null == a && (a = this.children.slice(0, h)),
                c < t && (f == t ? a.push(u) : u.decomposeStart(t - c, a)),
                c <= t && f >= t && l.split(r, a),
                c >= e ? a.push(u) : f > e && u.decomposeEnd(e - c, a)),
                c = f
            }
            return a ? i.from(s, a) : this
        }
        ,
        i.prototype.slice = function(t, e) {
            void 0 === e && (e = this.length);
            for (var n = "", i = 0, r = 0, o = this.children; r < o.length; r++) {
                var s = o[r]
                  , a = i + s.length;
                e > i && t < a && (n += s.slice(Math.max(0, t - i), Math.min(s.length, e - i))),
                i = a
            }
            return n
        }
        ,
        i.prototype.lineStart = function(t) {
            for (var e = 0, n = 0, i = 0; e < this.children.length; e++) {
                var r = this.children[e]
                  , o = n + r.lineBreaks;
                if (t <= o + 1)
                    return r.lineStart(t - n) + i;
                i += r.length,
                n = o
            }
            throw new RangeError("No line " + t + " in document")
        }
        ,
        i.prototype.lineStartAt = function(t) {
            for (var e = 0, n = 0; e < this.children.length; e++) {
                var i = this.children[e]
                  , r = n + i.length;
                if (r >= t) {
                    var o = i.lineStartAt(t - n);
                    return o + n - (0 == o ? o + this.lineLengthTo(e) : 0)
                }
                n = r
            }
            throw new RangeError("Position outside of document")
        }
        ,
        i.prototype.lineEndAt = function(t) {
            for (var e = this.children.length - 1, n = this.length; e >= 0; e--) {
                var i = this.children[e]
                  , r = n - i.length;
                if (r <= t) {
                    var o = i.lineEndAt(t - r);
                    return r + o + (o == i.length ? this.lineLengthFrom(e + 1) : 0)
                }
                n = r
            }
            throw new RangeError("Position outside of document")
        }
        ,
        i.prototype.linePos = function(t) {
            if (t > this.length)
                throw new RangeError("Position " + t + " outside of document");
            for (var e = 0, n = 0, i = 0; ; e++) {
                var r = this.children[e]
                  , o = i + r.length;
                if (o >= t) {
                    var s = r.linePos(t - i);
                    return 1 == s.line && (s.col += this.lineLengthTo(e)),
                    s.line += n,
                    s
                }
                i = o,
                n += r.lineBreaks
            }
        }
        ,
        i.prototype.getLine = function(t) {
            for (var e = 0, n = 1; e < this.children.length; e++) {
                var i = this.children[e]
                  , r = n + i.lineBreaks;
                if (t > n && t < r)
                    return i.getLine(t - n + 1);
                n = r
            }
            return this.slice(this.lineStart(t), t == this.lineBreaks + 1 ? this.length : this.lineStart(t + 1) - 1)
        }
        ,
        i.prototype.eq = function(t) {
            return this == t || u(this, t)
        }
        ,
        i.prototype.decomposeStart = function(t, e) {
            for (var n = 0, i = 0; ; n++) {
                var r = this.children[n]
                  , o = i + r.length;
                if (!(o <= t)) {
                    i < t && r.decomposeStart(t - i, e);
                    break
                }
                e.push(r),
                i = o
            }
        }
        ,
        i.prototype.decomposeEnd = function(t, e) {
            for (var n = 0, i = 0, r = this.children; i < r.length; i++) {
                var o = r[i]
                  , s = n + o.length;
                n >= t ? e.push(o) : s > t && n < t && o.decomposeEnd(t - n, e),
                n = s
            }
        }
        ,
        i.prototype.lineLengthTo = function(t) {
            for (var e = 0, n = t - 1; n >= 0; n--) {
                var i = this.children[n];
                if (i.lineBreaks)
                    return e + i.lastLineLength();
                e += i.length
            }
            return e
        }
        ,
        i.prototype.lastLineLength = function() {
            return this.lineLengthTo(this.children.length)
        }
        ,
        i.prototype.lineLengthFrom = function(t) {
            for (var e = 0, n = t; n < this.children.length; n++) {
                var i = this.children[n];
                if (i.lineBreaks)
                    return e + i.firstLineLength();
                e += i.length
            }
            return e
        }
        ,
        i.prototype.firstLineLength = function() {
            return this.lineLengthFrom(0)
        }
        ,
        i.from = function(t, e) {
            if (0 == e.length)
                return new l("");
            var r = t >> 3
              , o = r << 1
              , s = r >> 1
              , a = []
              , h = 0
              , c = [];
            function u(t) {
                var e, p = t.length;
                if (p > o && t instanceof i)
                    for (var d = 0, g = t.children; d < g.length; d++) {
                        u(g[d])
                    }
                else
                    p > s && (h > s || 0 == h) ? (f(),
                    a.push(t)) : t instanceof l && h > 0 && (e = c[c.length - 1])instanceof l && t.length + e.length <= n ? (h += p,
                    c[c.length - 1] = new l(e.text + t.text)) : (h + p > r && f(),
                    h += p,
                    c.push(t))
            }
            function f() {
                h > 0 && (a.push(1 == c.length ? c[0] : i.from(h, c)),
                h = 0,
                c.length = 0)
            }
            for (var p = 0, d = e; p < d.length; p++) {
                u(d[p])
            }
            return f(),
            1 == a.length ? a[0] : new i(t,a)
        }
        ,
        i
    }(o);
    function u(t, e) {
        if (t.length != e.length || t.lineBreaks != e.lineBreaks)
            return !1;
        for (var n = t.iter(), i = e.iter(), r = n.next(), o = i.next(); ; ) {
            var s = r.length
              , a = o.length;
            if (s == a) {
                if (r != o)
                    return !1;
                if (r = n.next(),
                o = i.next(),
                0 == r.length)
                    return !0
            } else if (s > a) {
                if (r.slice(0, a) != o)
                    return !1;
                r = r.slice(a),
                o = i.next()
            } else {
                if (o.slice(0, s) != r)
                    return !1;
                o = o.slice(s),
                r = n.next()
            }
        }
    }
    var f = function() {
        function t(t, e) {
            void 0 === e && (e = 1),
            this.dir = e,
            this.nodes = [t],
            this.offsets = [e > 0 ? 0 : t instanceof l ? t.length : t.children.length]
        }
        return t.prototype.next = function(t) {
            for (void 0 === t && (t = 0); ; ) {
                var e = this.nodes.length - 1;
                if (e < 0)
                    return "";
                var n = this.nodes[e]
                  , i = this.offsets[e];
                if (n instanceof l)
                    if (this.nodes.pop(),
                    this.offsets.pop(),
                    this.dir > 0) {
                        if ((o = n.length - i) > t)
                            return n.text.slice(i + t);
                        t -= o
                    } else {
                        if (i > t)
                            return n.text.slice(0, i - t);
                        t -= i
                    }
                else if (i == (this.dir > 0 ? n.children.length : 0))
                    this.nodes.pop(),
                    this.offsets.pop();
                else {
                    var r = n.children[this.dir > 0 ? i : i - 1]
                      , o = r.length;
                    this.offsets[e] = i + this.dir,
                    t > o ? t -= o : (this.nodes.push(r),
                    this.offsets.push(this.dir > 0 ? 0 : r instanceof l ? r.length : r.children.length))
                }
            }
        }
        ,
        t
    }()
      , p = function() {
        function t(t, e, n) {
            this.cursor = new f(t,e > n ? -1 : 1),
            e > n ? (this.skip = t.length - e,
            this.limit = e - n) : (this.skip = e,
            this.limit = n - e)
        }
        return t.prototype.next = function() {
            var t = this.cursor.next(this.skip);
            return this.skip = 0,
            t.length > this.limit && (t = this.cursor.dir > 0 ? t.slice(0, this.limit) : t.slice(t.length - this.limit)),
            this.limit -= t.length,
            t
        }
        ,
        t
    }()
      , d = function() {
        function t(t, e) {
            void 0 === e && (e = t),
            this.anchor = t,
            this.head = e
        }
        return Object.defineProperty(t.prototype, "from", {
            get: function() {
                return Math.min(this.anchor, this.head)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "to", {
            get: function() {
                return Math.max(this.anchor, this.head)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "empty", {
            get: function() {
                return this.anchor == this.head
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.map = function(e) {
            var n = e.mapPos(this.anchor)
              , i = e.mapPos(this.head);
            return n == this.anchor && i == this.head ? this : new t(n,i)
        }
        ,
        t.prototype.eq = function(t) {
            return this.anchor == t.anchor && this.head == t.head
        }
        ,
        t
    }()
      , g = function() {
        function t(t, e) {
            this.ranges = t,
            this.primaryIndex = e
        }
        return t.prototype.map = function(e) {
            return t.create(this.ranges.map(function(t) {
                return t.map(e)
            }), this.primaryIndex)
        }
        ,
        t.prototype.eq = function(t) {
            if (this.ranges.length != t.ranges.length || this.primaryIndex != t.primaryIndex)
                return !1;
            for (var e = 0; e < this.ranges.length; e++)
                if (!this.ranges[e].eq(t.ranges[e]))
                    return !1;
            return !0
        }
        ,
        Object.defineProperty(t.prototype, "primary", {
            get: function() {
                return this.ranges[this.primaryIndex]
            },
            enumerable: !0,
            configurable: !0
        }),
        t.single = function(e, n) {
            return void 0 === n && (n = e),
            new t([new d(e,n)],0)
        }
        ,
        t.create = function(e, n) {
            void 0 === n && (n = 0);
            for (var i = 0, r = 0; r < e.length; r++) {
                var o = e[r];
                if (o.from < i)
                    return m(e.slice(), n);
                i = o.to
            }
            return new t(e,n)
        }
        ,
        t.default = t.single(0),
        t
    }();
    function m(t, e) {
        void 0 === e && (e = 0);
        var n = t[e];
        t.sort(function(t, e) {
            return t.from - e.from
        }),
        e = t.indexOf(n);
        for (var i = 1; i < t.length; i++) {
            var r = t[i]
              , o = t[i - 1];
            if (r.from < o.to) {
                var s = o.from
                  , a = Math.max(r.to, o.to);
                i == e && e--,
                t.splice(--i, 2, r.anchor > r.head ? new d(a,s) : new d(s,a))
            }
        }
        return new g(t,e)
    }
    var v = Object.create(null)
      , y = function() {
        return function(t) {
            var e = t.init
              , n = t.apply
              , i = t.debugName
              , r = void 0 === i ? "field" : i;
            this.init = e,
            this.apply = n,
            this.key = b("$" + r, v)
        }
    }()
      , w = function() {
        return function(t) {
            this.config = t.config,
            this.stateField = t.state || null,
            this.view = t.view
        }
    }();
    function b(t, e) {
        for (var n = 0; ; n++) {
            var i = t + (n ? "_" + n : "");
            if (!(i in e))
                return e[i] = i
        }
    }
    var x = []
      , k = function() {
        function t(t, e, n) {
            this.from = t,
            this.to = e,
            this.text = n
        }
        return t.prototype.invert = function(e) {
            return new t(this.from,this.from + this.text.length,e.slice(this.from, this.to))
        }
        ,
        t.prototype.apply = function(t) {
            return t.replace(this.from, this.to, this.text)
        }
        ,
        t
    }()
      , S = function() {
        function t(t, e) {
            void 0 === e && (e = x),
            this.changes = t,
            this.mirror = e
        }
        return Object.defineProperty(t.prototype, "length", {
            get: function() {
                return this.changes.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getMirror = function(t) {
            for (var e = 0; e < this.mirror.length; e++)
                if (this.mirror[e] == t)
                    return this.mirror[e + (e % 2 ? -1 : 1)];
            return null
        }
        ,
        t.prototype.append = function(e, n) {
            return new t(this.changes.concat(e),null != n ? this.mirror.concat(this.length, n) : this.mirror)
        }
        ,
        t.prototype.mapPos = function(t, e, n) {
            return void 0 === e && (e = -1),
            void 0 === n && (n = !1),
            this.mapInner(t, e, n, 0, this.length)
        }
        ,
        t.prototype.mapInner = function(t, e, n, i, r) {
            for (var o, s, a = r < i ? -1 : 1, h = null, l = this.mirror.length > 0, c = !1, u = i - (a < 0 ? 1 : 0), f = r - (a < 0 ? 1 : 0); u != f; u += a) {
                var p = this.changes[u]
                  , d = p.from
                  , g = p.to
                  , m = p.text.length;
                if (a < 0) {
                    var v = g - d;
                    g = d + m,
                    m = v
                }
                if (!(t < d))
                    if (t > g)
                        t += m - (g - d);
                    else if (h && null != (o = h[u]))
                        t = d + o;
                    else {
                        if (l && null != (s = this.getMirror(u)) && (a > 0 ? s > u && s < r : s < u && s >= r)) {
                            if (t > d && t < g) {
                                u = s,
                                t = this.changes[u].from + (t - d);
                                continue
                            }
                            (h || (h = {}))[s] = t - d
                        }
                        t > d && t < g ? (c = !0,
                        t = e < 0 ? d : d + m) : t = (d == g ? e < 0 : t == d) ? d : d + m
                    }
            }
            return n && c ? -t - 1 : t
        }
        ,
        t.prototype.partialMapping = function(t, e) {
            return void 0 === e && (e = this.length),
            0 == t && e == this.length ? this : new M(this,t,e)
        }
        ,
        t.empty = new t(x),
        t
    }()
      , M = function() {
        function t(t, e, n) {
            this.changes = t,
            this.from = e,
            this.to = n
        }
        return t.prototype.mapPos = function(t, e, n) {
            return void 0 === e && (e = -1),
            void 0 === n && (n = !1),
            this.changes.mapInner(t, e, n, this.from, this.to)
        }
        ,
        t
    }()
      , O = []
      , A = function() {
        return function(t) {
            if (void 0 === t && (t = null),
            t)
                for (var e in t)
                    this[e] = t[e]
        }
    }();
    A.prototype.__proto__ = null;
    var C = Object.create(null)
      , P = function() {
        function t(t) {
            void 0 === t && (t = "meta"),
            this.name = b(t, C)
        }
        return t.time = new t("time"),
        t.origin = new t("origin"),
        t.userEvent = new t("userEvent"),
        t.addToHistory = new t("addToHistory"),
        t.rebased = new t("rebased"),
        t
    }()
      , D = function() {
        function t(t, e, n, i, r, o) {
            this.startState = t,
            this.changes = e,
            this.docs = n,
            this.selection = i,
            this.meta = r,
            this.flags = o
        }
        return t.start = function(e, n) {
            void 0 === n && (n = Date.now());
            var i = new A;
            return i[P.time.name] = n,
            new t(e,S.empty,O,e.selection,i,0)
        }
        ,
        Object.defineProperty(t.prototype, "doc", {
            get: function() {
                var t = this.docs.length - 1;
                return t < 0 ? this.startState.doc : this.docs[t]
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setMeta = function(e, n) {
            var i = new A(this.meta);
            return i[e.name] = n,
            new t(this.startState,this.changes,this.docs,this.selection,i,this.flags)
        }
        ,
        t.prototype.getMeta = function(t) {
            return this.meta[t.name]
        }
        ,
        t.prototype.change = function(e, n) {
            if (e.from == e.to && "" == e.text)
                return this;
            if (e.from < 0 || e.to < e.from || e.to > this.doc.length)
                throw new RangeError("Invalid change " + e.from + " to " + e.to);
            var i = this.changes.append(e, n);
            return new t(this.startState,i,this.docs.concat(e.apply(this.doc)),this.selection.map(i.partialMapping(i.length - 1)),this.meta,this.flags)
        }
        ,
        t.prototype.replace = function(t, e, n) {
            return this.change(new k(t,e,n))
        }
        ,
        t.prototype.replaceSelection = function(t) {
            return this.reduceRanges(function(e, n) {
                return {
                    transaction: e.change(new k(n.from,n.to,t)),
                    range: new d(n.from + t.length)
                }
            })
        }
        ,
        t.prototype.reduceRanges = function(e) {
            for (var n = this, i = n.selection, r = n.changes.length, o = [], s = 0, a = i.ranges; s < a.length; s++) {
                var h = a[s]
                  , l = e(n, h = h.map(n.changes.partialMapping(r)));
                l instanceof t ? (n = l,
                o.push(h.map(n.changes.partialMapping(n.changes.length - 1)))) : (n = l.transaction,
                o.push(l.range))
            }
            return n.setSelection(g.create(o, i.primaryIndex))
        }
        ,
        t.prototype.setSelection = function(e) {
            return new t(this.startState,this.changes,this.docs,e,this.meta,1 | this.flags)
        }
        ,
        Object.defineProperty(t.prototype, "selectionSet", {
            get: function() {
                return (1 & this.flags) > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "docChanged", {
            get: function() {
                return this.changes.length > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.scrollIntoView = function() {
            return new t(this.startState,this.changes,this.docs,this.selection,this.meta,2 | this.flags)
        }
        ,
        Object.defineProperty(t.prototype, "scrolledIntoView", {
            get: function() {
                return (2 & this.flags) > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.apply = function() {
            return this.startState.applyTransaction(this)
        }
        ,
        t
    }()
      , E = function() {
        return function(t) {
            this.plugins = t;
            for (var e = [], n = 0, i = t; n < i.length; n++) {
                var r = i[n].stateField;
                if (r) {
                    if (e.indexOf(r) > -1)
                        throw new Error("A state field (" + r.key + ") can only be added to a state once");
                    e.push(r)
                }
            }
            this.fields = e
        }
    }()
      , V = function() {
        function t(t, e, n) {
            void 0 === n && (n = g.default),
            this.config = t,
            this.doc = e,
            this.selection = n
        }
        return t.prototype.getField = function(t) {
            return this[t.key]
        }
        ,
        Object.defineProperty(t.prototype, "plugins", {
            get: function() {
                return this.config.plugins
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getPluginWithField = function(t) {
            for (var e = 0, n = this.config.plugins; e < n.length; e++) {
                var i = n[e];
                if (i.stateField == t)
                    return i
            }
            throw new Error("Plugin for field not configured")
        }
        ,
        t.prototype.applyTransaction = function(e) {
            for (var n = this.config, i = new t(n,e.doc,e.selection), r = 0, o = n.fields; r < o.length; r++) {
                var s = o[r];
                i[s.key] = s.apply(e, this[s.key], i)
            }
            return i
        }
        ,
        Object.defineProperty(t.prototype, "transaction", {
            get: function() {
                return D.start(this)
            },
            enumerable: !0,
            configurable: !0
        }),
        t.create = function(e) {
            void 0 === e && (e = {});
            for (var n = e.doc instanceof o ? e.doc : o.create(e.doc || ""), i = new E(e.plugins || []), r = new t(i,n,e.selection || g.default), s = 0, a = i.fields; s < a.length; s++) {
                var h = a[s];
                r[h.key] = h.init(r)
            }
            return r
        }
        ,
        t
    }()
      , L = []
      , T = function() {
        function t(t, e) {
            this.parent = t,
            this.dom = e,
            this.dirty = 0,
            e && (e.cmView = this)
        }
        return Object.defineProperty(t.prototype, "childGap", {
            get: function() {
                return 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "overrideDOMText", {
            get: function() {
                return null
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "posAtStart", {
            get: function() {
                return this.parent ? this.parent.posBefore(this) : 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "posAtEnd", {
            get: function() {
                return this.posAtStart + this.length
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.posBefore = function(t) {
            for (var e = this.posAtStart, n = 0, i = this.children; n < i.length; n++) {
                var r = i[n];
                if (r == t)
                    return e;
                e += r.length + this.childGap
            }
            throw new RangeError("Invalid child in posBefore")
        }
        ,
        t.prototype.posAfter = function(t) {
            return this.posBefore(t) + t.length
        }
        ,
        t.prototype.coordsAt = function(t) {
            for (var e = 0, n = 0; n < this.children.length; n++) {
                var i = this.children[n]
                  , r = e + i.length;
                if (r >= t && (r != e || this.childGap))
                    return i.coordsAt(t - e);
                e = r + this.childGap
            }
            return null
        }
        ,
        t.prototype.syncDOMChildren = function() {
            if (this.dom) {
                for (var t = this.dom.firstChild, e = 0, n = this.children; e < n.length; e++) {
                    var i = n[e].dom;
                    if (i)
                        if (i.parentNode == this.dom) {
                            for (; i != t; )
                                t = N(t);
                            t = t.nextSibling
                        } else
                            this.dom.insertBefore(i, t)
                }
                for (; t; )
                    t = N(t)
            }
        }
        ,
        t.prototype.sync = function() {
            if (2 & this.dirty && this.syncDOMChildren(),
            1 & this.dirty)
                for (var t = 0, e = this.children; t < e.length; t++) {
                    var n = e[t];
                    n.dirty && n.sync()
                }
            this.dirty = 0
        }
        ,
        t.prototype.domFromPos = function(t) {
            return null
        }
        ,
        t.prototype.localPosFromDOM = function(t, e) {
            var n;
            if (t == this.dom)
                n = this.dom.childNodes[e];
            else {
                for (var i = t.firstChild ? 0 == e ? -1 : 1 : 0; ; ) {
                    var r = t.parentNode;
                    if (r == this.dom)
                        break;
                    0 == i && r.firstChild != r.lastChild && (i = t == r.firstChild ? -1 : 1),
                    t = r
                }
                n = i < 0 ? t : t.nextSibling
            }
            for (; n && !n.cmView; )
                n = n.nextSibling;
            if (!n)
                return this.length;
            for (var o = 0, s = 0; ; o++) {
                var a = this.children[o];
                if (a.dom == n)
                    return s;
                s += a.length + this.childGap
            }
        }
        ,
        t.prototype.domBoundsAround = function(t, e, n) {
            void 0 === n && (n = 0);
            for (var i = -1, r = -1, o = -1, s = -1, a = 0, h = n; a < this.children.length; a++) {
                var l = this.children[a]
                  , c = h + l.length;
                if (h < t && c > e)
                    return l.domBoundsAround(t, e, h);
                if (c >= t && -1 == i && (i = a,
                r = h),
                c >= e && -1 == o) {
                    o = a,
                    s = c;
                    break
                }
                h = c + this.childGap
            }
            return {
                from: r,
                to: s,
                startDOM: (i ? this.children[i - 1].dom.nextSibling : null) || this.dom.firstChild,
                endDOM: o < this.children.length - 1 ? this.children[o + 1].dom : null
            }
        }
        ,
        t.prototype.markDirty = function() {
            2 & this.dirty || (this.dirty |= 2,
            this.markParentsDirty())
        }
        ,
        t.prototype.markParentsDirty = function() {
            for (var t = this.parent; t; t = t.parent) {
                if (1 & t.dirty)
                    return;
                t.dirty |= 1
            }
        }
        ,
        t.prototype.setParent = function(t) {
            this.parent = t,
            this.dirty && this.markParentsDirty()
        }
        ,
        t.prototype.replaceChildren = function(t, e, n) {
            void 0 === n && (n = L);
            var i;
            (i = this.children).splice.apply(i, [t, e - t].concat(n)),
            this.markDirty()
        }
        ,
        t.prototype.ignoreMutation = function(t) {
            return !1
        }
        ,
        t.prototype.ignoreEvent = function(t) {
            return !1
        }
        ,
        t
    }();
    function N(t) {
        var e = t.nextSibling;
        return t.parentNode.removeChild(t),
        e
    }
    var B = function() {
        function t(t, e, n, i) {
            void 0 === n && (n = 0),
            void 0 === i && (i = t.length),
            this.children = t,
            this.pos = e,
            this.gap = n,
            this.i = i,
            this.off = 0,
            this.pos += n
        }
        return t.prototype.findPos = function(t, e) {
            for (void 0 === e && (e = 1); ; ) {
                if (t > this.pos || t == this.pos && (e > 0 || 0 == this.i))
                    return this.off = t - this.pos,
                    this;
                this.pos -= this.children[--this.i].length + this.gap
            }
        }
        ,
        t
    }()
      , R = function() {
        function t(t, e, n) {
            this.from = t,
            this.to = e,
            this.value = n
        }
        return t.prototype.map = function(t, e, n) {
            var i = this.value.map(t, this.from + e, this.to + e);
            return i && (i.from -= n,
            i.to -= n),
            i
        }
        ,
        t.prototype.move = function(e) {
            return e ? new t(this.from + e,this.to + e,this.value) : this
        }
        ,
        Object.defineProperty(t.prototype, "heapPos", {
            get: function() {
                return this.to
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }()
      , I = [];
    function z(t) {
        return t.length ? t : I
    }
    var j = 32
      , H = function() {
        function t(t, e, n, i) {
            this.length = t,
            this.size = e,
            this.local = n,
            this.children = i
        }
        return t.prototype.update = function(t, e, n, i) {
            void 0 === t && (t = I),
            void 0 === e && (e = null),
            void 0 === n && (n = 0),
            void 0 === i && (i = this.length);
            var r = t.reduce(function(t, e) {
                return Math.max(t, e.to)
            }, this.length);
            return this.updateInner(t.length ? t.slice().sort(G) : t, e, n, i, 0, r)
        }
        ,
        t.prototype.updateInner = function(e, n, i, r, o, s) {
            for (var a = function(t, e, n, i, r) {
                if (!e)
                    return null;
                for (var o = null, s = 0; s < t.length; s++) {
                    var a = t[s]
                      , h = a.from + r
                      , l = a.to + r;
                    n > l || i < h || e(h, l, a.value) ? null != o && o.push(a) : null == o && (o = t.slice(0, s))
                }
                return o
            }(this.local, n, i, r, o), h = null, l = 0, c = 0, u = o, f = 0; f < this.children.length; f++) {
                for (var p = this.children[f], d = u + p.length, g = null; c < e.length; ) {
                    var m = e[c];
                    if (m.from >= d)
                        break;
                    c++,
                    m.to > d ? (a || (a = this.local.slice()),
                    Q(a, m.move(-o))) : (g || (g = [])).push(m)
                }
                var v = p;
                (g || n && i <= d && r >= u) && (v = v.updateInner(g || I, n, i, r, u, v.length)),
                v != p ? (h || (h = this.children.slice(0, f))).push(v) : h && h.push(v),
                l += v.size,
                u = d
            }
            if (!a && !h && c == e.length)
                return this;
            if ((l += (a || this.local).length + e.length - c) <= j)
                return function(t, e, n, i, r, o) {
                    for (var s = e.length > 0 && n.length > 0, a = 0, h = 0, l = t; h < l.length; h++) {
                        var c = l[h];
                        c.collect(e, -a),
                        a += c.length
                    }
                    for (var u = 0, f = n; u < f.length; u++) {
                        var p = f[u];
                        e.push(p.move(-r))
                    }
                    s && e.sort(G);
                    return new H(o,e.length,e,I)
                }(h || this.children, a || this.local.slice(), e, 0, o, s);
            var y = Math.max(j, l >> 5);
            return c < e.length && (h || (h = this.children.slice()),
            a || (a = this.local.slice()),
            function(t, e, n, i, r, o, s, a) {
                for (var h = i; h < n.length; ) {
                    for (var l = [], c = Math.min(h + a, n.length), u = c == n.length ? r + o : n[c].from; h < c; h++) {
                        var f = n[h];
                        f.to > u ? Q(t, f.move(-r)) : l.push(f)
                    }
                    for (var p = 0; p < t.length; p++) {
                        var f = t[p];
                        f.from >= s && f.to <= u && (t.splice(p--, 1),
                        Q(l, f.move(r)))
                    }
                    l.length && (l.length == n.length ? e.push(new H(u - s,l.length,l.map(function(t) {
                        return t.move(-s)
                    }),I)) : e.push(H.empty.updateInner(l, null, 0, 0, s, u - s)),
                    s = u)
                }
            }(a, h, e, c, o, s, u, y)),
            h && (a || (a = this.local.slice()),
            function(t, e, n) {
                for (var i, r, o = function(o, s) {
                    var a = e[o]
                      , h = void 0;
                    if (0 == a.size && (o > 0 || 1 == e.length))
                        e.splice(o--, 1),
                        o >= 0 && (e[o] = e[o].grow(a.length));
                    else if (a.size > n << 1 && a.local.length < a.length >> 1) {
                        for (var l = 0, c = a.local; l < c.length; l++) {
                            var u = c[l];
                            Q(t, u.move(s))
                        }
                        e.splice.apply(e, [o, 1].concat(a.children))
                    } else if (0 == a.children.length && o < e.length - 1 && (h = e[o + 1]).size + a.size <= j && 0 == h.children.length)
                        e.splice(o, 2, new H(a.length + h.length,a.size + h.size,a.local.concat(h.local.map(function(t) {
                            return t.move(a.length)
                        })),I));
                    else {
                        var f = o + 1
                          , p = a.size
                          , d = a.length;
                        if (a.size < n >> 1)
                            for (; f < e.length; f++) {
                                var g = e[f]
                                  , m = p + g.size;
                                if (m > n)
                                    break;
                                p = m,
                                d += g.length
                            }
                        if (f > o + 1) {
                            for (var v = new H(d,p,I,e.slice(o, f)), y = [], w = 0; w < t.length; w++) {
                                var u = t[w];
                                u.from >= s && u.to <= s + d && (t.splice(w--, 1),
                                y.push(u.move(-s)))
                            }
                            y.length && (v = v.update(y.sort(G))),
                            e.splice(o, f - o, v),
                            o++,
                            s += d
                        } else
                            o++,
                            s += a.length
                    }
                    i = o,
                    r = s
                }, s = 0, a = 0; s < e.length; )
                    o(s, a),
                    s = i,
                    a = r
            }(a, h, y)),
            new t(s,l,z(a || this.local),z(h || this.children))
        }
        ,
        t.prototype.grow = function(e) {
            return new t(this.length + e,this.size,this.local,this.children)
        }
        ,
        t.prototype.collect = function(t, e) {
            for (var n = 0, i = this.local; n < i.length; n++) {
                var r = i[n];
                t.push(r.move(e))
            }
            for (var o = 0, s = this.children; o < s.length; o++) {
                var a = s[o];
                a.collect(t, e),
                e += a.length
            }
        }
        ,
        t.prototype.map = function(e) {
            return 0 == e.length || this == t.empty ? this : this.mapInner(e, 0, 0, e.mapPos(this.length, 1)).set
        }
        ,
        t.prototype.mapInner = function(e, n, i, r) {
            for (var o = null, s = null, a = r - i, h = 0, l = 0; l < this.local.length; l++) {
                var c = (S = this.local[l]).map(e, n, i)
                  , u = null != c && (c.from < 0 || c.to > a);
                null != o || S == c && !u || (o = this.local.slice(0, l)),
                u ? (s || (s = [])).push(c) : o && c && o.push(c)
            }
            for (var f = null, p = (l = 0,
            n), d = i; l < this.children.length; l++) {
                var g = this.children[l]
                  , m = g
                  , v = p + g.length
                  , y = e.mapPos(p + g.length, 1)
                  , w = tt(p, v, e.changes);
                if (0 == w) {
                    var b = g.mapInner(e, p, d, y);
                    if (m = b.set,
                    b.escaped)
                        for (var x = 0, k = b.escaped; x < k.length; x++) {
                            var S;
                            (S = (S = k[x]).move(d - i)).from < 0 || S.to > a ? Q(s || (s = []), S) : Q(o || (o = this.local.slice()), S)
                        }
                } else
                    2 == w && (m = t.empty.grow(y - d));
                if (m != g) {
                    if (null == f && (f = this.children.slice(0, l)),
                    0 != m.size || 0 != m.length && !f.length && l != this.children.length)
                        f.push(m);
                    else if (m.length > 0 && l > 0) {
                        var M = f.length - 1
                          , O = f[M];
                        f[M] = new t(O.length + m.length,O.size,O.local,O.children)
                    }
                } else
                    f && f.push(m);
                h += m.size,
                p = v,
                d = y
            }
            return {
                set: a == this.length && null == f && null == o ? this : new t(a,h + (o || this.local).length,o || this.local,f || this.children),
                escaped: s
            }
        }
        ,
        t.prototype.forEach = function(t) {
            this.forEachInner(t, 0)
        }
        ,
        t.prototype.forEachInner = function(t, e) {
            for (var n = 0, i = this.local; n < i.length; n++) {
                var r = i[n];
                t(r.from + e, r.to + e, r.value)
            }
            for (var o = 0, s = this.children; o < s.length; o++) {
                var a = s[o];
                a.forEachInner(t, e),
                e += a.length
            }
        }
        ,
        t.prototype.iter = function() {
            var t = [];
            return this.size > 0 && (U(t, [new F(0,this)], 0),
            this.local.length && W(t, new _(0,this.local))),
            {
                next: function() {
                    if (0 != t.length) {
                        var e = $(t);
                        if (e instanceof _) {
                            var n = e.ranges[e.index].move(e.offset);
                            return ++e.index < e.ranges.length ? W(t, e) : e.next && U(t, e.next, 0),
                            n
                        }
                        return e
                    }
                }
            }
        }
        ,
        t.prototype.compare = function(t, e, n) {
            for (var i = 0, r = 0, o = 0, s = e; o < s.length; o++) {
                var a = s[o];
                a.fromB > r && (this != t || i != r) && new Z(this,i,t,r,a.fromB,n).run(),
                i = a.toA,
                r = a.toB
            }
            (i < this.length || r < t.length) && new Z(this,i,t,r,Math.max(this.length - i + r, t.length),n).run()
        }
        ,
        t.iterateSpans = function(t, e, n, i) {
            for (var r = [], o = 0, s = t; o < s.length; o++) {
                var a = s[o];
                a.size > 0 && (U(r, [new F(0,a)], e),
                a.local.length && W(r, new _(0,a.local)))
            }
            for (var h = []; r.length > 0; ) {
                var l = $(r);
                if (l instanceof _) {
                    if ((c = l.ranges[l.index]).from + l.offset > n)
                        break;
                    if (c.to + l.offset >= e)
                        if (c.from < c.to && !i.ignoreRange(c.value)) {
                            c = c.move(l.offset),
                            i.advance(c.from, h);
                            c.value.collapsed ? (i.ignorePoint(c.value) || i.point(c.value),
                            e = c.to,
                            i.advanceCollapsed(Math.min(e, n))) : (h.push(c.value),
                            W(r, c))
                        } else
                            c.from != c.to || i.ignorePoint(c.value) || (i.advance(c.from, h),
                            i.point(c.value));
                    ++l.index < l.ranges.length ? W(r, l) : l.next && U(r, l.next, e)
                } else {
                    var c;
                    if ((c = l).to >= n)
                        break;
                    i.advance(c.to, h),
                    h.splice(h.indexOf(c.value), 1)
                }
            }
            i.advance(n, h)
        }
        ,
        t.of = function(e) {
            return t.empty.update(e instanceof R ? [e] : e)
        }
        ,
        t.empty = new t(0,0,I,I),
        t
    }()
      , F = function() {
        return function(t, e) {
            this.offset = t,
            this.set = e,
            this.index = 0
        }
    }()
      , _ = function() {
        function t(t, e, n) {
            void 0 === n && (n = null),
            this.offset = t,
            this.ranges = e,
            this.next = n,
            this.index = 0
        }
        return Object.defineProperty(t.prototype, "heapPos", {
            get: function() {
                return this.ranges[this.index].from + this.offset
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "value", {
            get: function() {
                return this.ranges[this.index].value
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }();
    function q(t, e) {
        for (void 0 === e && (e = 0); 0 != t.length; ) {
            var n = t[t.length - 1];
            if (n.index == n.set.children.length)
                t.pop();
            else {
                var i = n.set.children[n.index]
                  , r = n.offset;
                if (n.index++,
                n.offset += i.length,
                n.offset >= e) {
                    t.push(new F(r,i));
                    break
                }
            }
        }
    }
    function K(t, e) {
        return t.heapPos - e.heapPos || t.value.bias - e.value.bias
    }
    function U(t, e, n) {
        for (void 0 === n && (n = 0); q(e, n),
        0 != e.length; ) {
            var i = e[e.length - 1]
              , r = i.set.local
              , o = i.set.children.length ? null : e;
            if (r.length && W(t, new _(i.offset,r,o)),
            o)
                break
        }
    }
    function W(t, e) {
        for (var n = t.push(e) - 1; n > 0; ) {
            var i = n >> 1
              , r = t[i];
            if (K(e, r) >= 0)
                break;
            t[n] = r,
            t[i] = e,
            n = i
        }
    }
    function $(t) {
        var e = t[0]
          , n = t.pop();
        if (0 == t.length)
            return e;
        t[0] = n;
        for (var i = 0; ; ) {
            var r = 1 + (i << 1);
            if (r >= t.length)
                break;
            var o = t[r];
            if (r + 1 < t.length && K(o, t[r + 1]) >= 0 && (o = t[r + 1],
            r++),
            K(n, o) < 0)
                break;
            t[r] = n,
            t[i] = o,
            i = r
        }
        return e
    }
    function G(t, e) {
        return t.from - e.from || t.value.bias - e.value.bias
    }
    function Q(t, e) {
        for (var n = t.length; n > 0 && G(t[n - 1], e) >= 0; )
            n--;
        t.splice(n, 0, e)
    }
    var Y = 1
      , J = 2
      , X = function() {
        function t(t) {
            this.stack = t,
            this.heap = [],
            this.active = [],
            this.points = [],
            this.tip = null,
            this.collapsedTo = -1
        }
        return t.prototype.forward = function(t, e) {
            var n = !1;
            if (e.set.local.length) {
                var i = new _(e.offset,e.set.local);
                W(this.heap, i),
                e.set.children.length || (this.tip = i,
                n = !0)
            }
            return q(this.stack, t),
            n
        }
        ,
        t
    }()
      , Z = function() {
        function t(t, e, n, i, r, o) {
            this.comparator = o,
            this.a = new X([new F(i - e,t)]),
            this.b = new X([new F(0,n)]),
            this.pos = i,
            this.end = r,
            this.forwardIter(Y | J)
        }
        return t.prototype.forwardIter = function(t) {
            for (; t > 0; ) {
                var e = this.a.stack.length ? this.a.stack[this.a.stack.length - 1] : null
                  , n = this.b.stack.length ? this.b.stack[this.b.stack.length - 1] : null;
                if (e && n && e.offset == n.offset && e.set == n.set)
                    q(this.a.stack, this.pos),
                    q(this.b.stack, this.pos);
                else if (e && (!n || e.offset < n.offset || e.offset == n.offset && (1 == this.a.stack.length || e.set.length >= n.set.length)))
                    this.a.forward(this.pos, e) && (t &= ~Y);
                else {
                    if (!n)
                        break;
                    this.b.forward(this.pos, n) && (t &= ~J)
                }
            }
        }
        ,
        t.prototype.run = function() {
            for (var t = this.a.heap, e = this.b.heap; ; )
                if (t.length && (!e.length || K(t[0], e[0]) < 0))
                    this.advance(this.a);
                else {
                    if (!e.length) {
                        this.comparator.comparePoints(this.pos, this.a.points, this.b.points);
                        break
                    }
                    this.advance(this.b)
                }
        }
        ,
        t.prototype.advancePos = function(t) {
            t > this.end && (t = this.end),
            t <= this.pos || ((this.a.points.length || this.b.points.length) && (this.comparator.comparePoints(this.pos, this.a.points, this.b.points),
            this.a.points.length = this.b.points.length = 0),
            this.comparator.compareRange(this.pos, t, this.a.active, this.b.active),
            this.pos = t)
        }
        ,
        t.prototype.advance = function(t) {
            var e = $(t.heap);
            if (e instanceof _) {
                if ((i = e.ranges[e.index++]).from + e.offset > this.end)
                    return t.heap.length = 0,
                    void (this.pos = this.end);
                if (i.from < i.to && i.to + e.offset > this.pos && !this.comparator.ignoreRange(i.value)) {
                    this.advancePos(i.from + e.offset);
                    if ((i = i.move(e.offset)).value.collapsed) {
                        this.comparator.ignorePoint(i.value) || t.points.push(i.value),
                        t.collapsedTo = Math.max(t.collapsedTo, i.to);
                        var n = Math.min(this.a.collapsedTo, this.b.collapsedTo);
                        n > this.pos && (this.pos = n)
                    }
                    t.active.push(i.value),
                    W(t.heap, i)
                } else
                    i.from != i.to || this.comparator.ignorePoint(i.value) || (this.advancePos(i.from),
                    t.points.push(i.value));
                e.index < e.ranges.length ? W(t.heap, e) : e == this.a.tip ? this.forwardIter(Y) : e == this.b.tip && this.forwardIter(J)
            } else {
                var i = e;
                this.advancePos(i.to),
                function(t, e) {
                    var n = t.indexOf(e)
                      , i = t.pop();
                    n != t.length && (t[n] = i)
                }(t.active, i.value)
            }
        }
        ,
        t
    }();
    function tt(t, e, n) {
        for (var i = 1, r = 0, o = n; r < o.length; r++) {
            var s = o[r];
            s.to >= t && s.from <= e && (s.from < t && s.to > e ? i = 2 : 1 == i && (i = 0));
            var a = s.text.length - (s.to - s.from);
            t > s.from && (t += a),
            e > s.to && (e += a)
        }
        return i
    }
    var et = function() {
        function t(t) {
            this.spec = t
        }
        return t.prototype.eq = function(t) {
            return this.spec === t
        }
        ,
        t.prototype.compare = function(t) {
            return this == t || this.constructor == t.constructor && this.eq(t.spec)
        }
        ,
        Object.defineProperty(t.prototype, "estimatedHeight", {
            get: function() {
                return -1
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }()
      , nt = function() {
        function t(t, e, n) {
            this.bias = t,
            this.widget = e,
            this.data = n
        }
        return t.range = function(t, e, n) {
            if (t >= e)
                throw new RangeError("Range decorations may not be empty");
            return new R(t,e,new rt(n))
        }
        ,
        t.point = function(t, e) {
            return new R(t,t,new ot(e))
        }
        ,
        t.set = function(t) {
            return H.of(t)
        }
        ,
        t.none = H.empty,
        t
    }()
      , it = 2e9
      , rt = function(t) {
        e(n, t);
        function n(e) {
            var n = t.call(this, !0 === e.inclusiveStart ? -it : it, e.collapsed instanceof et ? e.collapsed : null, e.data) || this;
            return n.spec = e,
            n.endBias = 1 == e.inclusiveEnd ? it : -it,
            n.tagName = e.tagName,
            n.class = e.class,
            n.attributes = e.attributes,
            n.collapsed = !!e.collapsed,
            n.affectsSpans = !!(n.attributes || n.tagName || n.class || n.collapsed),
            n
        }
        return n.prototype.map = function(t, e, n) {
            var i = t.mapPos(e, this.bias, !0)
              , r = t.mapPos(n, this.endBias, !0);
            if (i < 0) {
                if (r < 0)
                    return null;
                i = this.bias >= 0 ? -(i + 1) : t.mapPos(e, 1)
            } else
                r < 0 && (r = this.endBias < 0 ? -(r + 1) : t.mapPos(n, -1));
            return i < r ? new R(i,r,this) : null
        }
        ,
        n.prototype.eq = function(t) {
            return this == t || this.tagName == t.tagName && this.class == t.class && this.collapsed == t.collapsed && (this.widget == t.widget || this.widget && t.widget && this.widget.compare(t.widget)) && st(this.attributes, t.attributes)
        }
        ,
        n
    }(nt)
      , ot = function(t) {
        e(n, t);
        function n(e) {
            var n = t.call(this, e.side || 0, e.widget || null, e.data) || this;
            return n.spec = e,
            n
        }
        return n.prototype.map = function(t, e, n) {
            var i = t.mapPos(e, this.bias, !0);
            return i < 0 ? null : new R(i,i,this)
        }
        ,
        n.prototype.eq = function(t) {
            return this.bias == t.bias && (this.widget == t.widget || this.widget && t.widget && this.widget.compare(t.widget))
        }
        ,
        n
    }(nt);
    function st(t, e) {
        if (t == e)
            return !0;
        if (!t || !e)
            return !1;
        var n = Object.keys(t)
          , i = Object.keys(e);
        if (n.length != i.length)
            return !1;
        for (var r = 0, o = n; r < o.length; r++) {
            var s = o[r];
            if (-1 == i.indexOf(s) || t[s] !== e[s])
                return !1
        }
        return !0
    }
    var at = function() {
        return function() {
            this.content = [],
            this.height = []
        }
    }();
    function ht(t) {
        for (var e = 0, n = t; e < n.length; e++) {
            if (n[e].collapsed)
                return !0
        }
        return !1
    }
    var lt = 4;
    function ct(t, e, n) {
        n[n.length - 1] + lt > t ? n[n.length - 1] = e : n.push(t, e)
    }
    function ut(t, e) {
        if (0 == t.length)
            return e;
        if (0 == e.length)
            return t;
        for (var n = [], i = 0, r = 0; ; )
            if (i < t.length && (r == e.length || t[i] < e[r]))
                ct(t[i++], t[i++], n);
            else {
                if (!(r < e.length))
                    break;
                ct(e[r++], e[r++], n)
            }
        return n
    }
    var ft = function() {
        function t(t) {
            this.length = t,
            this.changes = new at
        }
        return t.prototype.compareRange = function(t, e, n, i) {
            !function(t, e) {
                if (t.length != e.length)
                    return !1;
                t: for (var n = 0, i = t; n < i.length; n++) {
                    var r = i[n];
                    if (!(e.indexOf(r) > -1)) {
                        for (var o = 0, s = e; o < s.length; o++) {
                            var a = s[o];
                            if (r.eq(a))
                                continue t
                        }
                        return !1
                    }
                }
                return !0
            }(n, i) && t < this.length && (ct(t, e = Math.min(e, this.length), this.changes.content),
            ht(n) != ht(i) && ct(t, e, this.changes.height))
        }
        ,
        t.prototype.ignoreRange = function(t) {
            return !t.affectsSpans
        }
        ,
        t.prototype.comparePoints = function(t, e, n) {
            !function(t, e) {
                if (t.length != e.length)
                    return !1;
                t: for (var n = 0, i = t; n < i.length; n++) {
                    for (var r = i[n].widget, o = 0, s = e; o < s.length; o++) {
                        var a = s[o].widget;
                        if (r.compare(a))
                            continue t
                    }
                    return !1
                }
                return !0
            }(e, n) && t <= this.length && (ct(t, t, this.changes.content),
            ct(t, t, this.changes.height))
        }
        ,
        t.prototype.ignorePoint = function(t) {
            return !t.widget
        }
        ,
        t
    }();
    function pt(t, e, n, i) {
        var r = new ft(i);
        return t.compare(e, n, r),
        r.changes
    }
    var dt = function() {
        function t() {
            this.ranges = [],
            this.pos = 0
        }
        return t.prototype.advance = function(t, e) {
            this.pos = t
        }
        ,
        t.prototype.advanceCollapsed = function(t) {
            ct(this.pos, t, this.ranges),
            this.pos = t
        }
        ,
        t.prototype.point = function(t) {
            ct(this.pos, this.pos, this.ranges)
        }
        ,
        t.prototype.ignoreRange = function(t) {
            return !0
        }
        ,
        t.prototype.ignorePoint = function(t) {
            return !t.widget
        }
        ,
        t
    }();
    function gt(t, e) {
        for (var n = new dt, i = 0, r = e; i < r.length; i++) {
            var o = r[i]
              , s = o.fromB
              , a = o.toB;
            s < a && (n.pos = s,
            H.iterateSpans(t, s, a, n))
        }
        return n.ranges
    }
    var mt = "undefined" != typeof navigator ? [navigator, document] : [{
        userAgent: "",
        vendor: "",
        platform: ""
    }, {}]
      , vt = mt[0]
      , yt = mt[1]
      , wt = /Edge\/(\d+)/.exec(vt.userAgent)
      , bt = /MSIE \d/.test(vt.userAgent)
      , xt = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(vt.userAgent)
      , kt = !!(bt || xt || wt)
      , St = !kt && /gecko\/(\d+)/i.test(vt.userAgent)
      , Mt = !kt && /Chrome\/(\d+)/.exec(vt.userAgent)
      , Ot = !kt && "WebkitAppearance"in yt.documentElement.style
      , At = {
        mac: /Mac/.test(vt.platform),
        ie: kt,
        ie_version: bt ? yt.documentMode || 6 : xt ? +xt[1] : wt ? +wt[1] : 0,
        gecko: St,
        gecko_version: St ? +(/Firefox\/(\d+)/.exec(vt.userAgent) || [0, 0])[1] : 0,
        chrome: !!Mt,
        chrome_version: Mt ? +Mt[1] : 0,
        ios: !kt && /AppleWebKit/.test(vt.userAgent) && /Mobile\/\w+/.test(vt.userAgent),
        webkit: Ot,
        safari: /Apple Computer/.test(vt.vendor),
        webkit_version: Ot ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0
    }
      , Ct = []
      , Pt = function(t) {
        e(n, t);
        function n() {
            return null !== t && t.apply(this, arguments) || this
        }
        return n.prototype.merge = function(t, e, n) {
            return void 0 === e && (e = 0),
            void 0 === n && (n = 0),
            !1
        }
        ,
        Object.defineProperty(n.prototype, "children", {
            get: function() {
                return Ct
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.finish = function(t) {}
        ,
        n.prototype.getSide = function() {
            return 0
        }
        ,
        n.appendInline = function(t, e) {
            var n = 0;
            if (e.length && t.length) {
                var i = t[t.length - 1];
                i.merge(e[0], i.length) && n++
            }
            for (; n < e.length; n++)
                t.push(e[n]);
            return t
        }
        ,
        n
    }(T)
      , Dt = function(t) {
        e(n, t);
        function n(e, n, i, r) {
            var o = t.call(this, null, null) || this;
            return o.text = e,
            o.tagName = n,
            o.attrs = r,
            o.textDOM = null,
            o.class = i,
            o
        }
        return n.prototype.finish = function(t) {
            if (this.setParent(t),
            !this.dom) {
                this.textDOM = document.createTextNode(this.text);
                var e = this.tagName || (this.attrs || this.class ? "span" : null);
                if (e) {
                    if (this.dom = document.createElement(e),
                    this.dom.appendChild(this.textDOM),
                    this.class && (this.dom.className = this.class),
                    this.attrs)
                        for (var n in this.attrs)
                            this.dom.setAttribute(n, this.attrs[n])
                } else
                    this.dom = this.textDOM;
                this.markDirty(),
                this.dom.cmView = this
            }
        }
        ,
        Object.defineProperty(n.prototype, "length", {
            get: function() {
                return this.text.length
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.sync = function() {
            if (2 & this.dirty) {
                this.textDOM.nodeValue != this.text && (this.textDOM.nodeValue = this.text);
                var t = this.dom;
                if (this.textDOM != t && (this.dom.firstChild != this.textDOM || t.lastChild != this.textDOM)) {
                    for (; t.firstChild; )
                        t.removeChild(t.firstChild);
                    t.appendChild(this.textDOM)
                }
            }
            this.dirty = 0
        }
        ,
        n.prototype.merge = function(t, e, i) {
            return void 0 === e && (e = 0),
            void 0 === i && (i = this.length),
            !(!(t instanceof n && t.tagName == this.tagName && t.class == this.class && st(t.attrs, this.attrs)) || this.length - (i - e) + t.length > 256) && (this.text = this.text.slice(0, e) + t.text + this.text.slice(i),
            this.markDirty(),
            !0)
        }
        ,
        n.prototype.cut = function(t, e) {
            void 0 === e && (e = this.length),
            this.text = this.text.slice(0, t) + this.text.slice(e),
            this.markDirty()
        }
        ,
        n.prototype.localPosFromDOM = function(t, e) {
            return t == this.textDOM ? e : e ? this.text.length : 0
        }
        ,
        n.prototype.domFromPos = function(t) {
            return {
                node: this.textDOM,
                offset: t
            }
        }
        ,
        n.prototype.domBoundsAround = function(t, e, n) {
            return {
                from: n,
                to: n + this.length,
                startDOM: this.dom,
                endDOM: this.dom.nextSibling
            }
        }
        ,
        n.prototype.coordsAt = function(t) {
            var e = document.createRange();
            if (At.chrome || At.gecko)
                return e.setEnd(this.textDOM, t),
                e.setStart(this.textDOM, t),
                e.getBoundingClientRect();
            var n = 0 == t ? 1 : -1;
            e.setEnd(this.textDOM, t + (n > 0 ? 1 : 0)),
            e.setStart(this.textDOM, t - (n < 0 ? 1 : 0));
            var i = e.getBoundingClientRect()
              , r = n < 0 ? i.right : i.left;
            return {
                left: r,
                right: r,
                top: i.top,
                bottom: i.bottom
            }
        }
        ,
        n
    }(Pt)
      , Et = function(t) {
        e(n, t);
        function n(e, n) {
            var i = t.call(this, null, null) || this;
            return i.widget = e,
            i.side = n,
            i
        }
        return n.prototype.finish = function(t) {
            this.setParent(t),
            this.dom || (this.dom = this.widget.toDOM(),
            this.dom.contentEditable = "false",
            this.dom.cmView = this),
            this.markDirty()
        }
        ,
        n.prototype.sync = function() {
            this.dirty = 0
        }
        ,
        Object.defineProperty(n.prototype, "length", {
            get: function() {
                return 0
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.getSide = function() {
            return this.side
        }
        ,
        Object.defineProperty(n.prototype, "overrideDOMText", {
            get: function() {
                return ""
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.merge = function(t) {
            return t instanceof n && t.widget.compare(this.widget) && t.side == this.side
        }
        ,
        n.prototype.ignoreMutation = function() {
            return !0
        }
        ,
        n.prototype.ignoreEvent = function() {
            return !0
        }
        ,
        n
    }(Pt)
      , Vt = function(t) {
        e(n, t);
        function n(e) {
            var n = t.call(this, null, null) || this;
            return n.length = e,
            n
        }
        return n.prototype.finish = function(t) {
            this.setParent(t)
        }
        ,
        n.prototype.merge = function(t, e, i) {
            return void 0 === e && (e = 0),
            void 0 === i && (i = this.length),
            t instanceof n && (this.length = e + t.length + (this.length - i),
            !0)
        }
        ,
        Object.defineProperty(n.prototype, "overrideDOMText", {
            get: function() {
                for (var t = this; t.parent; )
                    t = t.parent;
                var e = t.text
                  , n = this.posAtStart;
                return e ? e.slice(n, n + this.length) : ""
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.domBoundsAround = function() {
            return null
        }
        ,
        n
    }(Pt)
      , Lt = function() {
        function t(t, e) {
            this.pos = e,
            this.elements = [[]],
            this.textOff = 0,
            this.cursor = t.iter(),
            this.text = this.cursor.next(e)
        }
        return t.prototype.buildText = function(t, e, n, i) {
            for (; t > 0; ) {
                if (this.textOff == this.text.length) {
                    if (this.text = this.cursor.next(),
                    0 == this.text.length)
                        throw new Error("Ran out of text content when drawing inline views");
                    this.textOff = 0
                }
                for (var r = Math.min(this.textOff + t, this.text.length), o = this.textOff; o < r; o++)
                    if (10 == this.text.charCodeAt(o)) {
                        r = o;
                        break
                    }
                r > this.textOff && (this.elements[this.elements.length - 1].push(new Dt(this.text.slice(this.textOff, r),e,n,i)),
                t -= r - this.textOff,
                this.textOff = r),
                r < this.text.length && t && (this.elements.push([]),
                t--,
                this.textOff++)
            }
        }
        ,
        t.prototype.advance = function(t, e) {
            if (!(t <= this.pos)) {
                for (var n = null, i = null, r = null, o = 0, s = e; o < s.length; o++) {
                    var a = s[o];
                    if (a.tagName && (n = a.tagName),
                    a.class && (i = i ? i + " " + a.class : a.class),
                    a.attributes)
                        for (var h in a.attributes) {
                            var l = a.attributes[h];
                            null != l && ("class" == h ? i = i ? i + " " + l : l : (r || (r = {}),
                            "style" == h && r.style && (l = r.style + ";" + l),
                            r[h] = l))
                        }
                }
                this.buildText(t - this.pos, n, i, r),
                this.pos = t
            }
        }
        ,
        t.prototype.advanceCollapsed = function(t) {
            if (!(t <= this.pos)) {
                var e = this.elements[this.elements.length - 1];
                e.length && e[e.length - 1]instanceof Vt ? e[e.length - 1].length += t - this.pos : e.push(new Vt(t - this.pos));
                var n = t - this.pos;
                this.textOff + n <= this.text.length ? this.textOff += n : (this.text = this.cursor.next(n - (this.text.length - this.textOff)),
                this.textOff = 0),
                this.pos = t
            }
        }
        ,
        t.prototype.point = function(t) {
            this.elements[this.elements.length - 1].push(new Et(t.widget,t instanceof ot ? t.bias : 0))
        }
        ,
        t.prototype.ignoreRange = function(t) {
            return !t.affectsSpans
        }
        ,
        t.prototype.ignorePoint = function(t) {
            return !t.widget
        }
        ,
        t.build = function(e, n, i, r) {
            var o = new t(e,n);
            return H.iterateSpans(r, n, i, o),
            o.elements
        }
        ,
        t
    }()
      , Tt = "undefined" == typeof document || document.getRootNode ? function(t) {
        return t.getRootNode()
    }
    : function() {
        return document
    }
    ;
    function Nt(t) {
        var e = t.isCollapsed;
        return e && At.chrome && t.rangeCount && !t.getRangeAt(0).collapsed && (e = !1),
        e
    }
    function Bt(t) {
        var e = Tt(t).getSelection();
        if (!e.anchorNode)
            return !1;
        try {
            return t.contains(3 == e.anchorNode.nodeType ? e.anchorNode.parentNode : e.anchorNode)
        } catch (t) {
            return !1
        }
    }
    function Rt(t) {
        if (3 == t.nodeType) {
            var e = document.createRange();
            return e.setEnd(t, t.nodeValue.length),
            e.setStart(t, 0),
            e.getClientRects()
        }
        return 1 == t.nodeType ? t.getClientRects() : []
    }
    function It(t, e, n, i) {
        return !!n && (jt(t, e, n, i, -1) || jt(t, e, n, i, 1))
    }
    function zt(t) {
        for (var e = 0; ; e++)
            if (!(t = t.previousSibling))
                return e
    }
    function jt(t, e, n, i, r) {
        for (; ; ) {
            if (t == n && e == i)
                return !0;
            if (e == (r < 0 ? 0 : Ht(t))) {
                if ("DIV" == t.nodeName || "PRE" == t.nodeName)
                    return !1;
                var o = t.parentNode;
                if (!o || 1 != o.nodeType)
                    return !1;
                e = zt(t) + (r < 0 ? 0 : 1),
                t = o
            } else {
                if (1 != t.nodeType)
                    return !1;
                t = t.childNodes[e + (r < 0 ? -1 : 0)],
                e = r < 0 ? Ht(t) : 0
            }
        }
    }
    function Ht(t) {
        return 3 == t.nodeType ? t.nodeValue.length : t.childNodes.length
    }
    var Ft = function(t) {
        e(n, t);
        function n(e, n) {
            var i = t.call(this, e, document.createElement("div")) || this;
            return i.length = 0,
            i.children = [],
            n.length && i.update(0, 0, n),
            i.markDirty(),
            i
        }
        return n.prototype.update = function(t, e, n) {
            void 0 === e && (e = this.length);
            for (var i = new B(this.children,this.length), r = i.findPos(e, 1), o = r.i, s = r.off, a = i.findPos(t, -1), h = a.i, l = a.off, c = t - e, u = 0, f = n; u < f.length; u++) {
                c += f[u].length
            }
            if (this.length += c,
            h == o && l) {
                var p = this.children[h];
                if (1 == n.length && p.merge(n[0], l, s))
                    return;
                if (0 == n.length)
                    return p.cut(l, s);
                Pt.appendInline(n, [new Dt(p.text.slice(s),p.tagName,p.class,p.attrs)]),
                o++,
                s = 0
            }
            if (s) {
                var d = this.children[o];
                n.length && d.merge(n[n.length - 1], 0, s) ? n.pop() : d.cut(0, s)
            } else
                o < this.children.length && n.length && this.children[o].merge(n[n.length - 1], 0, 0) && n.pop();
            if (l) {
                p = this.children[h];
                n.length && p.merge(n[0], l) ? n.shift() : p.cut(l),
                h++
            } else
                h && n.length && this.children[h - 1].merge(n[0], this.children[h - 1].length) && n.shift();
            for (; h < o && n.length && this.children[o - 1].merge(n[n.length - 1]); )
                n.pop(),
                o--;
            for (; h < o && n.length && this.children[h].merge(n[0]); )
                n.shift(),
                h++;
            if (n.length || h != o) {
                for (var g = 0, m = n; g < m.length; g++) {
                    m[g].finish(this)
                }
                this.replaceChildren(h, o, n)
            }
        }
        ,
        n.prototype.detachTail = function(t) {
            var e = [];
            if (0 == this.length)
                return e;
            var n = new B(this.children,this.length).findPos(t)
              , i = n.i
              , r = n.off;
            if (r > 0) {
                var o = this.children[i];
                e.push(new Dt(o.text.slice(r),o.tagName,o.class,o.attrs)),
                o.cut(r),
                i++
            }
            if (i < this.children.length) {
                for (var s = i; s < this.children.length; s++)
                    e.push(this.children[s]);
                this.replaceChildren(i, this.children.length)
            }
            return this.length = t,
            e
        }
        ,
        n.prototype.domFromPos = function(t) {
            for (var e = new B(this.children,this.length).findPos(t), n = e.i, i = e.off; 0 == i && n > 0 && this.children[n - 1].getSide() > 0; )
                n--;
            if (0 == i)
                return {
                    node: this.dom,
                    offset: n
                };
            var r = this.children[n];
            return r instanceof Dt ? {
                node: r.textDOM,
                offset: i
            } : {
                node: this.dom,
                offset: n
            }
        }
        ,
        n.prototype.sync = function() {
            t.prototype.sync.call(this);
            var e = this.dom.lastChild;
            if (!e || "BR" == e.nodeName) {
                var n = document.createElement("BR");
                n.cmIgnore = !0,
                this.dom.appendChild(n)
            }
        }
        ,
        n.prototype.measureTextSize = function() {
            if (0 == this.children.length || this.length > 20)
                return null;
            for (var t = 0, e = 0, n = this.children; e < n.length; e++) {
                var i = n[e];
                if (!(i instanceof Dt))
                    return null;
                var r = Rt(i.dom);
                if (1 != r.length)
                    return null;
                t += r[0].width
            }
            return {
                lineHeight: this.dom.getBoundingClientRect().height,
                charWidth: t / this.length
            }
        }
        ,
        n.prototype.coordsAt = function(e) {
            return 0 == this.length ? this.dom.lastChild.getBoundingClientRect() : t.prototype.coordsAt.call(this, e)
        }
        ,
        n
    }(T);
    var _t = function() {
        function t() {
            this.top = 0,
            this.bottom = 0
        }
        return t.prototype.updateFromDOM = function(t, e) {
            var n = function(t, e) {
                for (var n = t.getBoundingClientRect(), i = Math.max(0, Math.min(innerHeight, n.top)), r = Math.max(0, Math.min(innerHeight, n.bottom)), o = t.parentNode; o; )
                    if (1 == o.nodeType) {
                        if (o.scrollHeight > o.clientHeight) {
                            var s = o.getBoundingClientRect();
                            i = Math.min(s.bottom, Math.max(s.top, i)),
                            r = Math.min(s.bottom, Math.max(s.top, r))
                        }
                        o = o.parentNode
                    } else {
                        if (11 != o.nodeType)
                            break;
                        o = o.host
                    }
                return {
                    top: i - (n.top + e),
                    bottom: r - (n.top + e)
                }
            }(t, e)
              , i = n.top
              , r = n.bottom
              , o = i - this.top
              , s = r - this.bottom
              , a = 0;
            return o > 0 && s > 0 ? a = Math.max(o, s) : o < 0 && s < 0 && (a = Math.min(o, s)),
            this.top = i,
            this.bottom = r,
            a
        }
        ,
        t.prototype.getViewport = function(t, e, n, i) {
            var r = .5 - Math.max(-.5, Math.min(.5, n / 1e3 / 2))
              , o = new qt(e.posAt(this.top - 1e3 * r, t, -1),e.posAt(this.bottom + 1e3 * (1 - r), t, 1));
            if (i > -1)
                if (i < o.from) {
                    var s = e.heightAt(i, t, -1);
                    o = new qt(e.posAt(s - 500, t, -1),e.posAt(s + (this.bottom - this.top) + 500, t, 1))
                } else if (i > o.to) {
                    var a = e.heightAt(i, t, 1);
                    o = new qt(e.posAt(a - (this.bottom - this.top) - 500, t, -1),e.posAt(a + 500, t, 1))
                }
            return o
        }
        ,
        t.prototype.coveredBy = function(t, e, n, i) {
            void 0 === i && (i = 0);
            var r = n.heightAt(e.from, t, -1)
              , o = n.heightAt(e.to, t, 1);
            return (0 == e.from || r <= this.top - Math.max(10, Math.min(-i, 250))) && (e.to == t.length || o >= this.bottom + Math.max(10, Math.min(i, 250)))
        }
        ,
        t
    }()
      , qt = function() {
        function t(t, e) {
            this.from = t,
            this.to = e
        }
        return t.prototype.clip = function(t) {
            return Math.max(this.from, Math.min(this.to, t))
        }
        ,
        t.empty = new t(0,0),
        t
    }()
      , Kt = {
        childList: !0,
        characterData: !0,
        subtree: !0,
        characterDataOldValue: !0
    }
      , Ut = At.ie && At.ie_version <= 11
      , Wt = function() {
        function t(t, e, n, i) {
            var r = this;
            this.docView = t,
            this.onDOMChange = e,
            this.onSelectionChange = n,
            this.onScrollChanged = i,
            this.charDataQueue = [],
            this.charDataTimeout = null,
            this.scrollTargets = [],
            this.intersection = null,
            this.intersecting = !0,
            this.active = !1,
            this.selectionActive = !0,
            this.dom = t.dom,
            this.observer = new MutationObserver(function(t) {
                return r.applyMutations(t)
            }
            ),
            Ut && (this.onCharData = function(t) {
                r.charDataQueue.push({
                    target: t.target,
                    type: "characterData",
                    oldValue: t.prevValue
                }),
                null == r.charDataTimeout && (r.charDataTimeout = setTimeout(function() {
                    return r.flush()
                }, 20))
            }
            ),
            this.readSelection = this.readSelection.bind(this),
            this.listenForSelectionChanges(),
            this.onScroll = this.onScroll.bind(this),
            window.addEventListener("scroll", this.onScroll),
            "function" == typeof IntersectionObserver && (this.intersection = new IntersectionObserver(function(t) {
                t[t.length - 1].intersectionRatio > 0 != r.intersecting && (r.intersecting = !r.intersecting,
                r.onScroll())
            }
            ,{}),
            this.intersection.observe(this.dom)),
            this.listenForScroll(),
            this.start()
        }
        return t.prototype.listenForSelectionChanges = function() {
            var t = this
              , e = !1;
            this.dom.addEventListener("focus", function() {
                e || (t.dom.ownerDocument.addEventListener("selectionchange", t.readSelection),
                e = !0,
                Bt(t.dom) && t.readSelection())
            }),
            this.dom.addEventListener("blur", function() {
                e && (t.dom.ownerDocument.removeEventListener("selectionchange", t.readSelection),
                e = !1)
            })
        }
        ,
        t.prototype.onScroll = function() {
            this.intersecting && (this.readSelection(),
            this.onScrollChanged())
        }
        ,
        t.prototype.listenForScroll = function() {
            for (var t = 0, e = null, n = this.dom; n; )
                if (1 == n.nodeType)
                    !e && t < this.scrollTargets.length && this.scrollTargets[t] == n ? t++ : e || (e = this.scrollTargets.slice(0, t)),
                    e && e.push(n),
                    n = n.parentNode;
                else {
                    if (11 != n.nodeType)
                        break;
                    n = n.host
                }
            if (t < this.scrollTargets.length && (e = this.scrollTargets.slice(0, t)),
            e) {
                for (var i = 0, r = this.scrollTargets; i < r.length; i++) {
                    (n = r[i]).removeEventListener("scroll", this.onScroll)
                }
                for (var o = 0, s = this.scrollTargets = e; o < s.length; o++) {
                    (n = s[o]).addEventListener("scroll", this.onScroll)
                }
            }
        }
        ,
        t.prototype.withoutListening = function(t) {
            try {
                this.stop(),
                t()
            } finally {
                this.start()
            }
        }
        ,
        t.prototype.withoutSelectionListening = function(t) {
            try {
                this.selectionActive = !1,
                t()
            } finally {
                this.selectionActive = !0
            }
        }
        ,
        t.prototype.start = function() {
            this.active || (this.observer.observe(this.dom, Kt),
            Ut && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData),
            this.active = !0)
        }
        ,
        t.prototype.stop = function() {
            this.active && (this.active = !1,
            this.observer.takeRecords(),
            this.charDataQueue.length = 0,
            this.observer.disconnect(),
            Ut && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData))
        }
        ,
        t.prototype.getMutations = function() {
            var t = this.observer.takeRecords();
            return this.charDataQueue.length && (clearTimeout(this.charDataTimeout),
            this.charDataTimeout = null,
            t = t.concat(this.charDataQueue),
            this.charDataQueue.length = 0),
            t
        }
        ,
        t.prototype.flush = function() {
            return this.applyMutations(this.getMutations())
        }
        ,
        t.prototype.applyMutations = function(t) {
            if (0 == t.length)
                return !1;
            for (var e = -1, n = -1, i = !1, r = 0, o = t; r < o.length; r++) {
                var s = o[r]
                  , a = this.readMutation(s);
                a && (a.typeOver && (i = !0),
                -1 == e ? (e = a.from,
                n = a.to) : (e = Math.min(a.from, e),
                n = Math.max(a.to, n)))
            }
            var h = e > -1 && this.active;
            return h && this.onDOMChange(e, n, i),
            this.docView.dirty && this.docView.sync(),
            h
        }
        ,
        t.prototype.readMutation = function(t) {
            var e = this.docView.nearest(t.target);
            if (!e || e.ignoreMutation(t))
                return null;
            if (e.markDirty(),
            "childList" == t.type) {
                var n = $t(e, t.previousSibling || t.target.previousSibling, -1)
                  , i = $t(e, t.nextSibling || t.target.nextSibling, 1);
                return {
                    from: n ? e.posAfter(n) : e.posAtStart,
                    to: i ? e.posBefore(i) : e.posAtEnd,
                    typeOver: !1
                }
            }
            return {
                from: e.posAtStart,
                to: e.posAtEnd,
                typeOver: t.target.nodeValue == t.oldValue
            }
        }
        ,
        t.prototype.readSelection = function() {
            var t = Tt(this.dom);
            this.active && this.selectionActive && t.activeElement == this.dom && Bt(this.dom) && !this.docView.drawnSelection.eq(t.getSelection()) && (this.flush() || this.onSelectionChange())
        }
        ,
        t.prototype.destroy = function() {
            this.stop(),
            this.intersection && this.intersection.disconnect(),
            this.dom.ownerDocument.removeEventListener("selectionchange", this.readSelection);
            for (var t = 0, e = this.scrollTargets; t < e.length; t++) {
                e[t].removeEventListener("scroll", this.onScroll)
            }
            window.removeEventListener("scroll", this.onScroll)
        }
        ,
        t
    }();
    function $t(t, e, n) {
        for (; e; ) {
            var i = e.cmView;
            if (i && i.parent == t)
                return i;
            var r = e.parentNode;
            e = r != t.dom ? r : n > 0 ? e.nextSibling : e.previousSibling
        }
        return null
    }
    var Gt = ["pre-wrap", "normal", "pre-line"]
      , Qt = function() {
        function t() {
            this.doc = o.create(""),
            this.lineWrapping = !1,
            this.heightSamples = {},
            this.lineHeight = 14,
            this.lineLength = 30,
            this.heightChanged = !1
        }
        return t.prototype.heightForGap = function(t, e) {
            var n = this.doc.linePos(e).line - this.doc.linePos(t).line + 1;
            return this.lineWrapping && (n += Math.ceil((e - t - n * this.lineLength * .5) / this.lineLength)),
            this.lineHeight * n
        }
        ,
        t.prototype.heightForLine = function(t) {
            if (!this.lineWrapping)
                return this.lineHeight;
            return (1 + Math.max(0, Math.ceil((t - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight
        }
        ,
        t.prototype.setDoc = function(t) {
            return this.doc = t,
            this
        }
        ,
        t.prototype.maybeRefresh = function(t) {
            for (var e = !1, n = 1; n < t.length; n += 2) {
                var i = Math.floor(10 * t[n]);
                this.heightSamples[i] || (e = !0,
                this.heightSamples[i] = !0)
            }
            return e
        }
        ,
        t.prototype.refresh = function(t, e, n, i) {
            var r = Gt.indexOf(t) > -1
              , o = Math.round(e) != Math.round(this.lineHeight) || this.lineWrapping != r;
            if (this.lineWrapping = r,
            this.lineHeight = e,
            this.lineLength = n,
            o) {
                this.heightSamples = {};
                for (var s = 0, a = i; s < a.length; s++) {
                    var h = a[s];
                    this.heightSamples[Math.floor(10 * h)] = !0
                }
            }
            return o
        }
        ,
        t
    }()
      , Yt = function() {
        function t(t, e, n) {
            void 0 === n && (n = !0),
            this.length = t,
            this.height = e,
            this.outdated = n
        }
        return t.prototype.setHeight = function(t, e) {
            this.height != e && (this.height = e,
            t.heightChanged = !0)
        }
        ,
        t.prototype.replace = function(e, n, i, r, o, s) {
            var a = [];
            this.decomposeLeft(e, a, i[0], r, o);
            var h;
            if (1 == i.length)
                h = a.pop();
            else {
                for (var l = 1; l < i.length - 1; l++)
                    a.push(i[l]);
                h = i[i.length - 1]
            }
            return this.decomposeRight(n, a, h, r, s),
            t.of(a)
        }
        ,
        t.prototype.applyChanges = function(t, e, n) {
            for (var i = this, r = n.length - 1; r >= 0; r--) {
                var o = n[r]
                  , s = re(e, t, o.fromB, o.toB);
                i = i.replace(o.fromA, o.toA, s, e, o.fromB, o.toB)
            }
            return i
        }
        ,
        t.empty = function() {
            return new Xt(0,0)
        }
        ,
        t.of = function(e) {
            if (1 == e.length)
                return e[0];
            for (var n = 0, i = e.length, r = 0, o = 0; n < i; )
                r < o ? r += e[n++].size : o += e[--i].size;
            for (; ; )
                if (r > 2 * o) {
                    var s = e[n - 1]
                      , a = s.left
                      , h = s.right;
                    e.splice(n - 1, 1, a, h),
                    r -= h.size,
                    o += h.size
                } else {
                    if (!(o > 2 * r))
                        break;
                    var l = e[n];
                    a = l.left,
                    h = l.right;
                    e.splice(n++, 1, a, h),
                    o -= a.size,
                    r += a.size
                }
            return new ne(t.of(e.slice(0, n)),t.of(e.slice(n)))
        }
        ,
        t
    }()
      , Jt = []
      , Xt = function(t) {
        e(n, t);
        function n(e, n, i) {
            void 0 === i && (i = Jt);
            var r = t.call(this, e, n) || this;
            return r.deco = i,
            r
        }
        return Object.defineProperty(n.prototype, "size", {
            get: function() {
                return 1
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.heightAt = function(t, e, n) {
            return n < 0 ? 0 : this.height
        }
        ,
        n.prototype.posAt = function(t, e, n, i) {
            return void 0 === i && (i = 0),
            i + (n < 0 ? 0 : this.length)
        }
        ,
        n.prototype.lineViewport = function(t, e, n) {
            return void 0 === n && (n = 0),
            new qt(n,n + this.length)
        }
        ,
        n.prototype.replace = function(e, i, r, o, s, a) {
            return 1 != r.length || r[0]instanceof ee && o.doc.lineEndAt(s) < a ? t.prototype.replace.call(this, e, i, r, o, s, a) : (this.deco = Zt(this.deco, e, i, r[0].length),
            r[0]instanceof n && (this.deco = te(this.deco, r[0].deco, e)),
            this.length += r[0].length - (i - e),
            this.outdated = !0,
            this)
        }
        ,
        n.prototype.decomposeLeft = function(t, e, i, r, o) {
            if (0 == t)
                e.push(i);
            else if (i instanceof n)
                e.push(this.joinLine(t, this.length, i));
            else {
                var s = r.doc.lineEndAt(o)
                  , a = s < o + i.length
                  , h = t + (a ? s - o : i.length);
                e.push(new n(h,this.height,Zt(this.deco, t, this.length, 0))),
                a && e.push(new ee(s + 1,o + i.length,r))
            }
        }
        ,
        n.prototype.decomposeRight = function(t, e, i, r, o) {
            if (t == this.length)
                e.push(i);
            else if (i instanceof n)
                e.push(this.joinLine(0, t, i));
            else {
                var s = r.doc.lineStartAt(o)
                  , a = s > o - i.length;
                a && e.push(new ee(o - i.length,s - 1,r));
                var h = (a ? o - s : i.length) + (this.length - t);
                e.push(new n(h,this.height,Zt(this.deco, 0, t, h - this.length)))
            }
        }
        ,
        n.prototype.joinLine = function(t, e, i) {
            var r = te(Zt(this.deco, t, e, i.length), i.deco, t);
            return new n(this.length + i.length - (e - t),Math.max(this.height, i.height),r)
        }
        ,
        n.prototype.updateHeight = function(t, e, n, i, r, o) {
            if (void 0 === e && (e = 0),
            void 0 === n && (n = !1),
            o) {
                if (2 != o.length)
                    throw new Error("Mismatch between height map and line data");
                this.setHeight(t, o[1])
            } else if (n || this.outdated) {
                for (var s = this.length, a = 0, h = 1; h < this.deco.length; h += 2) {
                    var l = this.deco[h];
                    l < 0 ? s += l : a = Math.max(l, a)
                }
                this.setHeight(t, Math.max(t.heightForLine(s), a))
            }
            return this.outdated = !1,
            this
        }
        ,
        n.prototype.toString = function() {
            return "line(" + this.length + (this.deco.length ? ":" + this.deco.join(",") : "") + ")"
        }
        ,
        n.prototype.forEachLine = function(t, e, n, i, r) {
            r(n, n + this.length, this)
        }
        ,
        Object.defineProperty(n.prototype, "hasCollapsedRanges", {
            get: function() {
                for (var t = 1; t < this.deco.length; t += 2)
                    if (this.deco[t] < 0)
                        return !0;
                return !1
            },
            enumerable: !0,
            configurable: !0
        }),
        n
    }(Yt);
    function Zt(t, e, n, i) {
        for (var r = null, o = i - (n - e), s = 0; s < t.length; s += 2) {
            var a = t[s];
            a < e || a > n && 0 == o || (r || (r = t.slice(0, s)),
            a > n && r.push(a + o, t[s + 1]))
        }
        return r ? r.length ? r : Jt : t
    }
    function te(t, e, n) {
        if (0 == e.length)
            return t;
        for (var i = [], r = !1, o = 0; ; o += 2) {
            var s = o == t.length ? 2e9 : t[o];
            if (!r && s > n) {
                for (var a = 0; a < e.length; a += 2)
                    i.push(e[a] + n, e[a + 1]);
                r = !0
            }
            if (2e9 == s)
                return i;
            i.push(s, t[o + 1])
        }
    }
    var ee = function(t) {
        e(n, t);
        function n(e, n, i) {
            return t.call(this, n - e, i.heightForGap(e, n), !1) || this
        }
        return Object.defineProperty(n.prototype, "size", {
            get: function() {
                return 1
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.heightAt = function(t, e, n, i) {
            void 0 === i && (i = 0);
            var r = e.linePos(i).line
              , o = e.linePos(i + this.length).line - r + 1;
            if (t < 0)
                throw new Error("YOU");
            return (e.linePos(t).line - r + (i > 0 ? 1 : 0)) * (this.height / o)
        }
        ,
        n.prototype.posAt = function(t, e, n, i) {
            void 0 === i && (i = 0);
            var r = e.linePos(i).line
              , o = e.linePos(i + this.length).line
              , s = r + Math.floor((o - r) * Math.max(0, Math.min(1, t / this.height)));
            return n < 0 ? e.lineStart(s) : e.lineEnd(s)
        }
        ,
        n.prototype.lineViewport = function(t, e, n) {
            return void 0 === n && (n = 0),
            new qt(e.lineStartAt(t + n),e.lineEndAt(t + n))
        }
        ,
        n.prototype.replace = function(e, i, r, o, s, a) {
            return 1 == r.length && r[0]instanceof n ? (this.setHeight(o, o.heightForGap(s - e, a + this.length - i)),
            this.length += r[0].length - (i - e),
            this) : t.prototype.replace.call(this, e, i, r, o, s, a)
        }
        ,
        n.prototype.decomposeLeft = function(t, e, i, r, o) {
            var s = o - t;
            if (i instanceof n)
                e.push(new n(s,o + i.length,r));
            else {
                var a = r.doc.lineStartAt(o);
                a > s && e.push(new n(s,a - 1,r));
                var h = Zt(i.deco, 0, 0, o - a);
                e.push(new Xt(o + i.length - a,i.height,h))
            }
        }
        ,
        n.prototype.decomposeRight = function(t, e, i, r, o) {
            var s = o + (this.length - t);
            if (i instanceof n)
                e.push(new n(o - i.length,s,r));
            else {
                var a = r.doc.lineEndAt(o);
                e.push(new Xt(i.length + (a - o),i.height,i.deco)),
                s > a && e.push(new n(a + 1,s,r))
            }
        }
        ,
        n.prototype.updateHeight = function(t, e, i, r, o, s) {
            if (void 0 === e && (e = 0),
            void 0 === i && (i = !1),
            s) {
                var a = [];
                r > e && a.push(new n(e,r - 1,t));
                for (var h = 0; h < s.length; h += 2)
                    a.push(new Xt(s[h],s[h + 1]));
                o < e + this.length && a.push(new n(o + 1,e + this.length,t));
                for (var l = 0, c = a; l < c.length; l++) {
                    c[l].outdated = !1
                }
                return t.heightChanged = !0,
                Yt.of(a)
            }
            return (i || this.outdated) && this.setHeight(t, t.heightForGap(e, e + this.length)),
            this.outdated = !1,
            this
        }
        ,
        n.prototype.toString = function() {
            return "gap(" + this.length + ")"
        }
        ,
        n.prototype.forEachLine = function(t, e, n, i, r) {
            for (var o = {
                height: -1,
                hasCollapsedRanges: !1
            }, s = Math.max(t, n), a = Math.min(e, n + this.length); s < a; ) {
                var h = i.doc.lineEndAt(s);
                o.height = i.heightForLine(h - s),
                r(s, h, o),
                s = h + 1
            }
        }
        ,
        n
    }(Yt)
      , ne = function(t) {
        e(n, t);
        function n(e, n) {
            var i = t.call(this, e.length + 1 + n.length, e.height + n.height, e.outdated || n.outdated) || this;
            return i.left = e,
            i.right = n,
            i.size = e.size + n.size,
            i
        }
        return n.prototype.heightAt = function(t, e, n, i) {
            void 0 === i && (i = 0);
            var r = i + this.left.length + 1;
            return t < r ? this.left.heightAt(t, e, n, i) : this.left.height + this.right.heightAt(t, e, n, r)
        }
        ,
        n.prototype.posAt = function(t, e, n, i) {
            void 0 === i && (i = 0);
            var r = t - this.left.height;
            return r < 0 ? this.left.posAt(t, e, n, i) : this.right.posAt(r, e, n, i + this.left.length + 1)
        }
        ,
        n.prototype.lineViewport = function(t, e, n) {
            void 0 === n && (n = 0);
            var i = this.left.length + 1;
            return t < i ? this.left.lineViewport(t, e, n) : this.right.lineViewport(t - i, e, n + i)
        }
        ,
        n.prototype.replace = function(e, n, i, r, o, s) {
            var a = this.left.length + 1;
            return n < a ? this.balanced(this.left.replace(e, n, i, r, o, s), this.right) : e >= a ? this.balanced(this.left, this.right.replace(e - a, n - a, i, r, o, s)) : t.prototype.replace.call(this, e, n, i, r, o, s)
        }
        ,
        n.prototype.decomposeLeft = function(t, e, n, i, r) {
            var o = this.left.length + 1;
            t < o ? this.left.decomposeLeft(t, e, n, i, r) : (e.push(this.left),
            this.right.decomposeLeft(t - o, e, n, i, r))
        }
        ,
        n.prototype.decomposeRight = function(t, e, n, i, r) {
            var o = this.left.length + 1;
            t < o ? (this.left.decomposeRight(t, e, n, i, r),
            e.push(this.right)) : this.right.decomposeRight(t - o, e, n, i, r)
        }
        ,
        n.prototype.balanced = function(t, e) {
            return t.size > 2 * e.size || e.size > 2 * t.size ? Yt.of([t, e]) : (this.left = t,
            this.right = e,
            this.height = t.height + e.height,
            this.outdated = t.outdated || e.outdated,
            this.size = t.size + e.size,
            this.length = t.length + 1 + e.length,
            this)
        }
        ,
        n.prototype.updateHeight = function(t, e, n, i, r, o) {
            if (void 0 === e && (e = 0),
            void 0 === n && (n = !1),
            o) {
                var s = this.left
                  , a = this.right
                  , h = e + s.length + 1;
                if (r < h)
                    s = s.updateHeight(t, e, n, i, r, o),
                    n && a.updateHeight(t, h, !0);
                else if (i >= h)
                    a = a.updateHeight(t, h, n, i, r, o),
                    n && s.updateHeight(t, e, !0);
                else {
                    for (var l = 0, c = i - 1; l < o.length && c <= h - 2; )
                        c += o[l] + 1,
                        l += 2;
                    a = a.updateHeight(t, h, n, h, r, o.slice(l)),
                    o.length = l,
                    s = s.updateHeight(t, e, n, i, h - 1, o)
                }
                return this.balanced(s, a)
            }
            return (n || this.outdated) && (this.left.updateHeight(t, e, n),
            this.right.updateHeight(t, e + this.left.length + 1, n),
            this.height = this.left.height + this.right.height),
            this.outdated = !1,
            this
        }
        ,
        n.prototype.toString = function() {
            return this.left + " " + this.right
        }
        ,
        n.prototype.forEachLine = function(t, e, n, i, r) {
            var o = n + this.left.length + 1;
            t < o && this.left.forEachLine(t, e, n, i, r),
            e >= o && this.right.forEachLine(t, e, o, i, r)
        }
        ,
        n
    }(Yt)
      , ie = function() {
        function t(t, e) {
            this.pos = t,
            this.oracle = e,
            this.nodes = [],
            this.lineStart = -1,
            this.lineEnd = -1,
            this.curLine = null,
            this.writtenTo = t
        }
        return t.prototype.advance = function(t) {
            t <= this.pos || (this.curLine ? (this.lineEnd < 0 && (this.lineEnd = this.oracle.doc.lineEndAt(this.pos)),
            t > this.lineEnd ? (this.curLine.length += this.lineEnd - this.pos,
            this.curLine.updateHeight(this.oracle, this.lineEnd - this.curLine.length),
            this.curLine = null,
            this.writtenTo = this.lineEnd + 1,
            this.lineEnd = -1) : (this.curLine.length += t - this.pos,
            this.writtenTo = t)) : this.lineEnd > -1 && t > this.lineEnd && (this.lineEnd = -1),
            this.pos = t)
        }
        ,
        t.prototype.advanceCollapsed = function(t) {
            t <= this.pos || (this.addDeco(this.pos - t),
            this.curLine && (this.curLine.length += t - this.pos,
            this.writtenTo = t,
            this.lineEnd < t && (this.lineEnd = -1)),
            this.pos = t)
        }
        ,
        t.prototype.point = function(t) {
            this.addDeco(t.widget.estimatedHeight)
        }
        ,
        t.prototype.flushTo = function(t) {
            t > this.writtenTo && (this.nodes.push(new ee(this.writtenTo,t,this.oracle)),
            this.writtenTo = t)
        }
        ,
        t.prototype.addDeco = function(t) {
            this.curLine || (this.lineStart = Math.max(this.writtenTo, this.oracle.doc.lineStartAt(this.pos)),
            this.flushTo(this.lineStart - 1),
            this.nodes.push(this.curLine = new Xt(this.pos - this.lineStart,0,[])),
            this.writtenTo = this.pos),
            this.curLine.deco.push(this.pos - this.lineStart, t)
        }
        ,
        t.prototype.ignoreRange = function(t) {
            return !t.collapsed
        }
        ,
        t.prototype.ignorePoint = function(t) {
            return !t.widget || t.widget.estimatedHeight < 0
        }
        ,
        t
    }();
    function re(t, e, n, i) {
        var r = new ie(n,t);
        return H.iterateSpans(e, n, i, r),
        r.curLine ? r.curLine.updateHeight(t, r.pos - r.curLine.length) : r.flushTo(r.pos),
        0 == r.nodes.length && r.nodes.push(new ee(0,0,t)),
        r.nodes
    }
    var oe = function() {
        function t(t, e, n, i) {
            this.fromA = t,
            this.toA = e,
            this.fromB = n,
            this.toB = i
        }
        return t.prototype.extend = function(e, n) {
            return new t(this.fromA,e,this.fromB,n)
        }
        ,
        t
    }();
    function se(t, e, n, i, r) {
        for (var o = 0; o < t.length; o++) {
            var s = t[o];
            if (!(s.toA < e)) {
                if (s.fromA > n)
                    break;
                e = Math.min(e, s.fromA),
                n = Math.max(n, s.toA),
                i = Math.min(i, s.fromB),
                r = Math.max(r, s.toB),
                t.splice(o--, 1)
            }
        }
        t.splice(o, 0, new oe(e,n,i,r))
    }
    var ae = function(t) {
        e(n, t);
        function n(e, n) {
            var i = t.call(this, null, e) || this;
            return i.callbacks = n,
            i.children = [new Ft(i,[])],
            i.visiblePart = qt.empty,
            i.viewports = [],
            i.text = o.create(""),
            i.decorations = [],
            i.selection = g.default,
            i.drawnSelection = new le,
            i.heightMap = Yt.empty(),
            i.heightOracle = new Qt,
            i.layoutCheckScheduled = -1,
            i.scrollIntoView = -1,
            i.paddingTop = 0,
            i.paddingBottom = 0,
            i.dirty = 2,
            i.viewportState = new _t,
            i.observer = new Wt(i,n.onDOMChange,n.onSelectionChange,function() {
                return i.checkLayout()
            }
            ),
            i.publicViewport = new ve(i,0,0),
            i
        }
        return Object.defineProperty(n.prototype, "length", {
            get: function() {
                return this.text.length
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "childGap", {
            get: function() {
                return 1
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.update = function(t, e, n, i) {
            var r = this;
            void 0 === e && (e = null),
            void 0 === n && (n = []),
            void 0 === i && (i = -1);
            var o = this.text.length;
            this.scrollIntoView = i,
            this.text = t.doc,
            this.selection = t.selection;
            var s = e ? function(t) {
                for (var e = [], n = 0; n < t.length; n++)
                    for (var i = t[n], r = 0; r < i.changes.length; r++) {
                        for (var o = i.changes.changes[r], s = o.from, a = o.to, h = o.from, l = o.from + o.text.length, c = r == i.changes.length - 1 ? n + 1 : n; c < t.length; c++)
                            h = (u = c == n ? i.changes.partialMapping(r + 1) : t[c].changes).mapPos(h, 1),
                            l = u.mapPos(l, -1);
                        for (c = r ? n : n - 1; c >= 0; c--) {
                            var u, f = t[c];
                            s = (u = f.changes.partialMapping(c == n ? r : f.changes.length, 0)).mapPos(s, 1),
                            a = u.mapPos(a, -1)
                        }
                        se(e, s, a, h, l)
                    }
                return e
            }(n) : [new oe(0,o,0,t.doc.length)];
            this.heightMap = this.heightMap.applyChanges([], this.heightOracle.setDoc(t.doc), s);
            var a = this.computeViewport(s, e, n, 0, i)
              , h = a.viewport
              , l = a.contentChanges;
            0 == this.dirty && 0 == l.length && this.selection.primary.from >= this.visiblePart.from && this.selection.primary.to <= this.visiblePart.to ? this.observer.withoutSelectionListening(function() {
                return r.updateSelection()
            }) : (this.updateInner(l, o, h),
            this.layoutCheckScheduled < 0 && (this.layoutCheckScheduled = requestAnimationFrame(function() {
                return r.checkLayout()
            })),
            this.callbacks.onUpdateDOM())
        }
        ,
        n.prototype.updateInner = function(t, e, n) {
            var i = this;
            this.visiblePart = n;
            var r = [n]
              , o = this.selection.primary
              , s = o.head
              , a = o.anchor;
            (s < n.from || s > n.to) && r.push(this.heightMap.lineViewport(s, this.text)),
            r.some(function(t) {
                var e = t.from
                  , n = t.to;
                return a >= e && a <= n
            }) || r.push(this.heightMap.lineViewport(a, this.text)),
            r.sort(function(t, e) {
                return t.from - e.from
            });
            for (var h = function(t, e, n) {
                var i = 0
                  , r = [];
                t: for (var o = 0, s = t; o < s.length; o++) {
                    for (var a = s[o], h = i; h < e.length; h++) {
                        var l = e[h];
                        if (me(l.from, 1, n) < a.to && me(l.to, -1, n) > a.from) {
                            r.push(l),
                            i = h + 1;
                            continue t
                        }
                    }
                    var c = r.length ? r[r.length - 1].to : 0;
                    r.push(new qt(c,c))
                }
                return r
            }(r, this.viewports, t), l = this.decorations.filter(function(t) {
                return t.size > 0
            }), c = new B(this.children,e,1), u = this.text.length, f = r.length - 1; ; f--) {
                var p = c.i;
                c.findPos(f < 0 ? 0 : h[f].to + 1);
                var d = c.i < p && this.children[c.i]instanceof ce ? this.children[c.i] : null
                  , g = f < 0 ? 0 : r[f].to + 1;
                if (u >= g ? (d && p - c.i == 1 || (d || (d = new ce(this)),
                this.replaceChildren(c.i, p, [d])),
                d.update(u - g, this.heightAt(u, 1) - this.heightAt(g, -1))) : p != c.i && this.replaceChildren(c.i, p),
                f < 0)
                    break;
                var m = r[f]
                  , v = h[f];
                p = c.i,
                v.from == v.to ? (this.replaceChildren(c.i, p, [new Ft(this,[])]),
                p = c.i + 1) : c.findPos(v.from),
                this.updatePart(c.i, p, v, m, t, l),
                u = m.from - 1
            }
            this.viewports = r,
            this.observer.withoutListening(function() {
                i.dom.style.height = i.heightMap.height + "px",
                i.sync(),
                i.updateSelection(),
                i.dom.style.height = ""
            })
        }
        ,
        n.prototype.updatePart = function(t, e, n, i, r, o) {
            for (var s = function(t, e, n) {
                for (var i = [], r = 0, o = 0, s = 0; ; s++) {
                    for (var a = s < t.length ? t[s] : null, h = a ? a.fromA : 2e9, l = a ? a.fromB : 2e9; r < h; ) {
                        var c = Math.min(Math.min(ge(e, r), h) - r, Math.min(ge(n, o), l) - o);
                        if (0 == c)
                            break;
                        var u = r + c
                          , f = o + c;
                        (r >= e.to || u <= e.from) != (o >= n.to || f <= n.from) && fe(i, e.clip(r), e.clip(u), n.clip(o), n.clip(f)),
                        r = u,
                        o = f
                    }
                    if (!a || a.fromA > e.to && a.fromB > n.to)
                        break;
                    (a.toA >= e.from && a.fromA <= e.to || a.toB >= n.from && a.fromB <= n.to) && fe(i, e.clip(a.fromA), e.clip(a.toA), n.clip(a.fromB), n.clip(a.toB)),
                    r = a.toA,
                    o = a.toB
                }
                return i
            }(r, n, i), a = new B(this.children,n.to,1,e), h = s.length - 1; h >= 0; h--) {
                var l = s[h]
                  , c = l.fromA
                  , u = l.toA
                  , f = l.fromB
                  , p = l.toB
                  , d = a.findPos(u)
                  , g = d.i
                  , m = d.off
                  , v = a.findPos(c)
                  , y = v.i
                  , w = v.off;
                this.updatePartRange(y, w, g, m, Lt.build(this.text, f, p, o))
            }
        }
        ,
        n.prototype.updatePartRange = function(t, e, n, i, r) {
            var o = this.children;
            if (1 == r.length)
                if (t == n)
                    o[t].update(e, i, r[0]);
                else {
                    var s = o[n].detachTail(i);
                    o[t].update(e, void 0, Pt.appendInline(r[0], s)),
                    this.replaceChildren(t + 1, n + 1)
                }
            else {
                s = o[n].detachTail(i);
                o[t].update(e, void 0, r[0]);
                for (var a = [], h = 1; h < r.length; h++)
                    a.push(new Ft(this,h < r.length - 1 ? r[h] : Pt.appendInline(r[h], s)));
                this.replaceChildren(t + 1, n + 1, a)
            }
        }
        ,
        n.prototype.updateSelection = function(t) {
            void 0 === t && (t = !1);
            var e, n = Tt(this.dom);
            if (t || n.activeElement == this.dom) {
                var i = this.domFromPos(this.selection.primary.anchor)
                  , r = this.domFromPos(this.selection.primary.head)
                  , o = n.getSelection();
                if (!It(i.node, i.offset, o.anchorNode, o.anchorOffset) || !It(r.node, r.offset, o.focusNode, o.focusOffset)) {
                    var s = document.createRange();
                    o.extend ? (s.setEnd(i.node, i.offset),
                    s.collapse(!1)) : (i > r && (e = [r, i],
                    i = e[0],
                    r = e[1]),
                    s.setEnd(r.node, r.offset),
                    s.setStart(i.node, i.offset)),
                    o.removeAllRanges(),
                    o.addRange(s),
                    o.extend && o.extend(r.node, r.offset),
                    this.drawnSelection.set(o)
                }
            }
        }
        ,
        n.prototype.heightAt = function(t, e) {
            return this.heightMap.heightAt(t, this.text, e) + this.paddingTop
        }
        ,
        n.prototype.computeViewport = function(t, e, n, i, r) {
            void 0 === t && (t = []);
            for (var o = 0; ; o++) {
                var s = this.viewportState.getViewport(this.text, this.heightMap, i, r)
                  , a = n && n.length > 0;
                if (5 == o || null == n && s.from == this.publicViewport._from && s.to == this.publicViewport._to)
                    return 5 == o && console.warn("Viewport and decorations failed to converge"),
                    {
                        viewport: s,
                        contentChanges: t
                    };
                this.publicViewport._from = s.from,
                this.publicViewport._to = s.to;
                var h = this.text.length;
                a ? (this.callbacks.onUpdateState(e, n),
                h = e.doc.length) : this.callbacks.onUpdateViewport();
                var l = this.callbacks.getDecorations();
                if (!a && de(l, this.decorations))
                    return {
                        viewport: s,
                        contentChanges: t
                    };
                var c = ue(a ? t : [], l, this.decorations, h)
                  , u = c.content
                  , f = c.height;
                this.decorations = l;
                var p = pe([], f);
                a && (p = pe(p, gt(l, t))),
                this.heightMap = this.heightMap.applyChanges(l, this.heightOracle, p),
                t = pe(t, u),
                n = null
            }
        }
        ,
        n.prototype.focus = function() {
            var t = this;
            this.observer.withoutSelectionListening(function() {
                return t.updateSelection(!0)
            })
        }
        ,
        n.prototype.checkLayout = function() {
            var t;
            cancelAnimationFrame(this.layoutCheckScheduled),
            this.layoutCheckScheduled = -1,
            this.measureVerticalPadding();
            var e = Math.min(this.scrollIntoView, this.text.length);
            this.scrollIntoView = -1;
            var n = this.viewportState.updateFromDOM(this.dom, this.paddingTop);
            if (!(this.viewportState.top >= this.viewportState.bottom)) {
                var i = this.measureVisibleLineHeights()
                  , r = !1;
                if (this.heightOracle.maybeRefresh(i)) {
                    var o = this.measureTextSize()
                      , s = o.lineHeight
                      , a = o.charWidth;
                    r = this.heightOracle.refresh(getComputedStyle(this.dom).whiteSpace, s, this.dom.clientWidth / a, i)
                }
                e > -1 && function(t, e) {
                    var n = t.ownerDocument.defaultView
                      , i = 0
                      , r = t.previousSibling;
                    r && "sticky" == getComputedStyle(r).position && (i = t.offsetLeft);
                    for (var o = t.parentNode; o; )
                        if (1 == o.nodeType) {
                            var s = void 0
                              , a = o == document.body;
                            if (a)
                                s = {
                                    left: 0,
                                    right: (u = n).innerWidth,
                                    top: 0,
                                    bottom: u.innerHeight
                                };
                            else {
                                if (o.scrollHeight <= o.clientHeight && o.scrollWidth <= o.clientWidth) {
                                    o = o.parentNode;
                                    continue
                                }
                                var h = o.getBoundingClientRect();
                                s = {
                                    left: h.left,
                                    right: h.left + o.clientWidth,
                                    top: h.top,
                                    bottom: h.top + o.clientHeight
                                }
                            }
                            var l = 0
                              , c = 0;
                            if (e.top < s.top + 0 ? c = -(s.top - e.top + 5) : e.bottom > s.bottom - 0 && (c = e.bottom - s.bottom + 5),
                            e.left < s.left + i + 0 ? l = -(s.left + i - e.left + 5) : e.right > s.right - 0 && (l = e.right - s.right + 5),
                            (l || c) && (a ? n.scrollBy(l, c) : (c && (o.scrollTop += c),
                            l && (o.scrollLeft += l),
                            e = {
                                left: e.left - l,
                                top: e.top - c,
                                right: e.right - l,
                                bottom: e.bottom - c
                            })),
                            a)
                                break;
                            o = o.parentNode
                        } else {
                            if (11 != o.nodeType)
                                break;
                            o = o.host
                        }
                    var u
                }(this.dom, this.coordsAt(e));
                for (var h = !1, l = 0; ; l++) {
                    this.heightOracle.heightChanged = !1,
                    this.heightMap = this.heightMap.updateHeight(this.heightOracle, 0, r, this.visiblePart.from, this.visiblePart.to, i || this.measureVisibleLineHeights());
                    var c = this.viewportState.coveredBy(this.text, this.visiblePart, this.heightMap, n);
                    if (c && !this.heightOracle.heightChanged)
                        break;
                    if (h = !0,
                    l > 10)
                        throw new Error("Layout failed to converge");
                    var u = this.visiblePart
                      , f = [];
                    c || (t = this.computeViewport([], null, null, n, -1),
                    u = t.viewport,
                    f = t.contentChanges),
                    this.updateInner(f, this.text.length, u),
                    i = null,
                    r = !1,
                    n = 0,
                    this.viewportState.updateFromDOM(this.dom, this.paddingTop)
                }
                h && (this.observer.listenForScroll(),
                this.callbacks.onUpdateDOM())
            }
        }
        ,
        n.prototype.nearest = function(t) {
            for (var e = t; e; ) {
                var n = e.cmView;
                if (n)
                    for (var i = n; i; i = i.parent)
                        if (i == this)
                            return n;
                e = e.parentNode
            }
            return null
        }
        ,
        n.prototype.posFromDOM = function(t, e) {
            var n = this.nearest(t);
            if (!n)
                throw new RangeError("Trying to find position for a DOM position outside of the document");
            return n.localPosFromDOM(t, e) + n.posAtStart
        }
        ,
        n.prototype.domFromPos = function(t) {
            var e = new B(this.children,this.text.length,1).findPos(t)
              , n = e.i
              , i = e.off;
            return this.children[n].domFromPos(i)
        }
        ,
        n.prototype.measureVisibleLineHeights = function() {
            for (var t = [], e = this.visiblePart, n = e.from, i = e.to, r = 0, o = 0; r <= i; o++) {
                var s = this.children[o];
                r >= n && t.push(s.length, s.dom.getBoundingClientRect().height),
                r += s.length + 1
            }
            return t
        }
        ,
        n.prototype.measureVerticalPadding = function() {
            var t = window.getComputedStyle(this.dom);
            this.paddingTop = parseInt(t.paddingTop) || 0,
            this.paddingBottom = parseInt(t.paddingBottom) || 0
        }
        ,
        n.prototype.measureTextSize = function() {
            for (var t = this, e = 0, n = this.children; e < n.length; e++) {
                var i = n[e];
                if (i instanceof Ft) {
                    var r = i.measureTextSize();
                    if (r)
                        return r
                }
            }
            var o, s, a = document.createElement("div");
            return a.style.cssText = "contain: strict",
            a.textContent = "abc def ghi jkl mno pqr stu",
            this.observer.withoutListening(function() {
                t.dom.appendChild(a);
                var e = Rt(a.firstChild)[0];
                o = a.getBoundingClientRect().height,
                s = e ? e.width / 27 : 7,
                a.remove()
            }),
            {
                lineHeight: o,
                charWidth: s
            }
        }
        ,
        n.prototype.destroy = function() {
            cancelAnimationFrame(this.layoutCheckScheduled),
            this.observer.destroy()
        }
        ,
        n
    }(T)
      , he = []
      , le = function() {
        function t() {
            this.anchorNode = null,
            this.anchorOffset = 0,
            this.focusNode = null,
            this.focusOffset = 0
        }
        return t.prototype.eq = function(t) {
            return this.anchorNode == t.anchorNode && this.anchorOffset == t.anchorOffset && this.focusNode == t.focusNode && this.focusOffset == t.focusOffset
        }
        ,
        t.prototype.set = function(t) {
            this.anchorNode = t.anchorNode,
            this.anchorOffset = t.anchorOffset,
            this.focusNode = t.focusNode,
            this.focusOffset = t.focusOffset
        }
        ,
        t
    }()
      , ce = function(t) {
        e(n, t);
        function n(e) {
            var n = t.call(this, e, document.createElement("div")) || this;
            return n.length = 0,
            n.height = 0,
            n.dom.contentEditable = "false",
            n
        }
        return Object.defineProperty(n.prototype, "children", {
            get: function() {
                return he
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.update = function(t, e) {
            this.length = t,
            e != this.height && (this.height = e,
            this.markDirty())
        }
        ,
        n.prototype.sync = function() {
            this.dirty && (this.dom.style.height = this.height + "px",
            this.dirty = 0)
        }
        ,
        Object.defineProperty(n.prototype, "overrideDOMText", {
            get: function() {
                return this.parent ? this.parent.text.slice(this.posAtStart, this.posAtEnd) : ""
            },
            enumerable: !0,
            configurable: !0
        }),
        n.prototype.domBoundsAround = function() {
            return null
        }
        ,
        n
    }(T);
    function ue(t, e, n, i) {
        for (var r = [], o = [], s = e.length - 1; s >= 0; s--) {
            var a = e[s]
              , h = s < n.length ? n[s] : nt.none;
            if (0 != a.size || 0 != h.size) {
                var l = pt(h, a, t, i);
                r = ut(r, l.content),
                o = ut(o, l.height)
            }
        }
        return {
            content: r,
            height: o
        }
    }
    function fe(t, e, n, i, r) {
        if (t.length) {
            var o = t[t.length - 1];
            if (o.toA == e && o.toB == i)
                return void (t[t.length - 1] = new oe(o.fromA,n,o.fromB,r))
        }
        t.push(new oe(e,n,i,r))
    }
    function pe(t, e) {
        for (var n = [], i = 0, r = 0, o = 0, s = 0; ; i++) {
            for (var a = i == t.length ? null : t[i], h = o - s, l = a ? a.fromB : 2e9; r < e.length && e[r] < l; ) {
                var c = e[r]
                  , u = e[r + 1]
                  , f = Math.max(s, c)
                  , p = Math.min(l, u);
                if (f <= p && fe(n, f + h, p + h, f, p),
                u > l)
                    break;
                r += 2
            }
            if (!a)
                return n;
            fe(n, a.fromA, a.toA, a.fromB, a.toB),
            o = a.toA,
            s = a.toB
        }
    }
    function de(t, e) {
        if (t.length != e.length)
            return !1;
        for (var n = 0; n < t.length; n++)
            if (t[n] !== e[n])
                return !1;
        return !0
    }
    function ge(t, e) {
        return e < t.from ? t.from : e < t.to ? t.to : 2e9 + 1
    }
    function me(t, e, n) {
        for (var i = 0, r = 0, o = n; r < o.length; r++) {
            var s = o[r];
            if (t < s.fromA)
                return t + i;
            if (t <= s.toA)
                return e < 0 ? s.fromA : s.toA;
            i = s.toB - s.toA
        }
        return t + i
    }
    var ve = function() {
        function t(t, e, n) {
            this.docView = t,
            this._from = e,
            this._to = n
        }
        return Object.defineProperty(t.prototype, "from", {
            get: function() {
                return this._from
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "to", {
            get: function() {
                return this._to
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.forEachLine = function(t) {
            this.docView.heightMap.forEachLine(this.from, this.to, 0, this.docView.heightOracle, t)
        }
        ,
        t
    }();
    function ye(t) {
        var e = t.cmView;
        return !(!e || 0 != e.length || !t.nextSibling && "BR" == t.nodeName)
    }
    function we(t, e) {
        var n = Tt(t.contentDOM).getSelection()
          , i = n.focusNode
          , r = n.focusOffset;
        if (i) {
            var o = !1;
            if (At.gecko && 1 == i.nodeType) {
                (a = i.childNodes[r - (e < 0 ? 0 : 1)]) && ye(a) && (o = !0)
            }
            for (var s = 0; ; s++) {
                if (100 == s)
                    throw new Error("NO END");
                if (r != (e < 0 ? 0 : Ht(i))) {
                    if (1 != i.nodeType)
                        break;
                    var a;
                    if (ye(a = i.childNodes[r - (e < 0 ? 1 : 0)]))
                        o = !0,
                        r += e;
                    else if (i = a,
                    r = e < 0 ? Ht(i) : 0,
                    1 != i.nodeType)
                        break
                } else {
                    if ("DIV" == i.nodeName || "PRE" == i.nodeName)
                        break;
                    if (r = zt(i) + (e < 0 ? 0 : 1),
                    (i = i.parentNode) == t.contentDOM)
                        break
                }
            }
            o && function(t, e, n) {
                var i = Tt(t.contentDOM).getSelection();
                t.docView.observer.withoutSelectionListening(function() {
                    if (Nt(i)) {
                        var t = document.createRange();
                        t.setEnd(e, n),
                        t.setStart(e, n),
                        i.removeAllRanges(),
                        i.addRange(t)
                    } else
                        i.extend && i.extend(e, n)
                })
            }(t, i, r)
        }
    }
    var be = function() {
        function t(t) {
            var e = this;
            this.lastKeyCode = 0,
            this.lastKeyTime = 0,
            this.lastSelectionOrigin = null,
            this.lastSelectionTime = 0,
            this.registeredEvents = [];
            var n = function(n) {
                var r = ke[n];
                t.contentDOM.addEventListener(n, function(i) {
                    xe(t, i) && (e.runCustomHandlers(n, t, i) ? i.preventDefault() : r(t, i))
                }),
                i.registeredEvents.push(n)
            }
              , i = this;
            for (var r in ke)
                n(r);
            t.contentDOM.addEventListener("keydown", function(e) {
                t.inputState.lastKeyCode = e.keyCode,
                t.inputState.lastKeyTime = Date.now()
            }),
            document.activeElement == t.contentDOM && t.dom.classList.add("CodeMirror-focused"),
            this.updateCustomHandlers(t)
        }
        return t.prototype.setSelectionOrigin = function(t) {
            this.lastSelectionOrigin = t,
            this.lastSelectionTime = Date.now()
        }
        ,
        t.prototype.updateCustomHandlers = function(t) {
            var e = this;
            this.customHandlers = function(t) {
                var e = Object.create(null);
                return t.someProp("handleDOMEvents", function(t) {
                    for (var n in t)
                        (e[n] || (e[n] = [])).push(t[n])
                }),
                e
            }(t);
            var n = this;
            for (var i in this.customHandlers)
                r = i,
                n.registeredEvents.indexOf(r) < 0 && (n.registeredEvents.push(r),
                t.contentDOM.addEventListener(r, function(n) {
                    xe(t, n) && e.runCustomHandlers(r, t, n) && n.preventDefault()
                }));
            var r
        }
        ,
        t.prototype.runCustomHandlers = function(t, e, n) {
            var i = this.customHandlers[t];
            if (i)
                for (var r = 0, o = i; r < o.length; r++) {
                    if ((0,
                    o[r])(e, n) || n.defaultPrevented)
                        return !0
                }
            return !1
        }
        ,
        t
    }();
    function xe(t, e) {
        if (!e.bubbles)
            return !0;
        if (e.defaultPrevented)
            return !1;
        for (var n = e.target; n != t.contentDOM; n = n.parentNode)
            if (!n || 11 == n.nodeType || n.cmView && n.cmView.ignoreEvent(e))
                return !1;
        return !0
    }
    var ke = Object.create(null)
      , Se = At.ie && At.ie_version < 15 || At.ios && At.webkit_version < 604;
    function Me(t, e) {
        t.dispatch(t.state.transaction.replaceSelection(e).setMeta(P.userEvent, "paste").scrollIntoView())
    }
    ke.keydown = function(t, e) {
        (function(t, e) {
            var n = e.keyCode
              , i = function(t) {
                var e = "";
                return t.ctrlKey && (e += "c"),
                t.metaKey && (e += "m"),
                t.altKey && (e += "a"),
                t.shiftKey && (e += "s"),
                e
            }(e);
            if (8 == n || 37 == n || 38 == n || At.mac && 72 == n && "c" == i)
                we(t, -1);
            else if (46 == n || 39 == n || 40 == n || At.mac && 68 == n && "c" == i)
                we(t, 1);
            else if (27 == n || i == (At.mac ? "m" : "c") && (66 == n || 73 == n || 89 == n || 90 == n))
                return !0;
            return !1
        }
        )(t, e) && e.preventDefault(),
        t.inputState.setSelectionOrigin("keyboard")
    }
    ,
    ke.mousedown = function(t, e) {
        t.inputState.setSelectionOrigin("pointer")
    }
    ,
    ke.paste = function(t, e) {
        var n = Se ? null : e.clipboardData
          , i = n && n.getData("text/plain");
        i ? (Me(t, i),
        e.preventDefault()) : function(t) {
            var e = t.dom.ownerDocument
              , n = e.body.appendChild(e.createElement("textarea"));
            n.style.cssText = "position: fixed; left: -10000px; top: 10px",
            n.focus(),
            setTimeout(function() {
                t.focus(),
                e.body.removeChild(n),
                Me(t, n.value)
            }, 50)
        }(t)
    }
    ;
    ke.copy = ke.cut = function(t, e) {
        var n = t.state.selection.primary;
        if (!n.empty) {
            var i = Se ? null : e.clipboardData
              , r = t.state.doc.slice(n.from, n.to);
            i ? (e.preventDefault(),
            i.clearData(),
            i.setData("text/plain", r)) : function(t, e) {
                var n = t.dom.ownerDocument
                  , i = n.body.appendChild(n.createElement("textarea"));
                i.style.cssText = "position: fixed; left: -10000px; top: 10px",
                i.value = e,
                i.focus(),
                i.selectionEnd = e.length,
                i.selectionStart = 0,
                setTimeout(function() {
                    n.body.removeChild(i),
                    t.focus()
                }, 50)
            }(t, r),
            "cut" == e.type && t.dispatch(t.state.transaction.replaceSelection("").scrollIntoView().setMeta(P.userEvent, "cut"))
        }
    }
    ,
    ke.focus = function(t) {
        t.dom.classList.add("CodeMirror-focused")
    }
    ,
    ke.blur = function(t) {
        t.dom.classList.remove("CodeMirror-focused")
    }
    ;
    function Oe(t, e, n, i) {
        var r = t.docView.domBoundsAround(e, n, 0);
        if (r) {
            var o = r.from
              , s = r.to
              , a = function(t) {
                var e = Tt(t)
                  , n = [];
                if (e.activeElement != t)
                    return n;
                var i = e.getSelection()
                  , r = i.anchorNode
                  , o = i.anchorOffset
                  , s = i.focusNode
                  , a = i.focusOffset;
                r && (n.push(new Pe(r,o)),
                s == r && a == o || n.push(new Pe(s,a)));
                return n
            }(t.contentDOM)
              , h = new Ae(a);
            h.readRange(r.startDOM, r.endDOM);
            var l = function(t, e) {
                if (0 == t.length)
                    return null;
                var n = t[0].pos
                  , i = 2 == t.length ? t[1].pos : n;
                return n > -1 && i > -1 ? g.single(n + e, i + e) : null
            }(a, o)
              , c = t.state.selection.primary
              , u = c.from
              , f = null;
            8 === t.inputState.lastKeyCode && t.inputState.lastKeyTime > Date.now() - 100 && (u = c.to,
            f = "end"),
            t.inputState.lastKeyCode = 0;
            var p = function(t, e, n, i) {
                var r = Math.min(t.length, e.length)
                  , o = 0;
                for (; o < r && t.charCodeAt(o) == e.charCodeAt(o); )
                    o++;
                if (o == r && t.length == e.length)
                    return null;
                var s = t.length
                  , a = e.length;
                for (; s > 0 && a > 0 && t.charCodeAt(s - 1) == e.charCodeAt(a - 1); )
                    s--,
                    a--;
                if ("end" == i) {
                    var h = Math.max(0, o - Math.min(s, a));
                    n -= s + h - o
                }
                if (s < o && t.length < e.length) {
                    var l = n <= o && n >= s ? o - n : 0;
                    a = (o -= l) + (a - s),
                    s = o
                } else if (a < o) {
                    var l = n <= o && n >= a ? o - n : 0;
                    s = (o -= l) + (s - a),
                    a = o
                }
                return {
                    from: o,
                    toA: s,
                    toB: a
                }
            }(t.state.doc.slice(o, s), h.text, u - o, f);
            if (!p && i && !c.empty && l && l.primary.empty && (p = {
                from: c.from - o,
                toA: c.to - o,
                toB: c.to - o
            }),
            p) {
                var d = o + p.from
                  , m = o + p.toA
                  , v = t.state.selection.primary
                  , y = t.state.transaction;
                y = d >= v.from && m <= v.to && m - d >= (v.to - v.from) / 3 ? y.replaceSelection(h.text.slice(v.from - o, v.to - p.toA + p.toB - o)) : y.replace(d, m, h.text.slice(p.from, p.toB)),
                l && !y.selection.primary.eq(l.primary) && (y = y.setSelection(l)),
                t.dispatch(y.scrollIntoView())
            } else
                l && !l.primary.eq(c) ? t.dispatch(t.state.transaction.setSelection(l).scrollIntoView()) : t.updateState([], t.state)
        } else
            t.updateState([], t.state)
    }
    var Ae = function() {
        function t(t) {
            this.points = t,
            this.text = ""
        }
        return t.prototype.readRange = function(t, e) {
            if (t) {
                for (var n = t.parentNode, i = t; ; ) {
                    this.findPointBefore(n, i),
                    this.readNode(i);
                    var r = i.nextSibling;
                    if (r == e)
                        break;
                    (Ce(i) || Ce(r) && "BR" != i.nodeName) && (this.text += "\n"),
                    i = r
                }
                this.findPointBefore(n, e)
            }
        }
        ,
        t.prototype.readNode = function(t) {
            if (!t.cmIgnore) {
                var e, n = t.cmView, i = n && n.overrideDOMText;
                null != i ? e = i : 3 == t.nodeType ? e = t.nodeValue : "BR" == t.nodeName ? e = t.nextSibling ? "\n" : "" : 1 == t.nodeType && this.readRange(t.firstChild, null),
                null != e && (this.findPointIn(t, e.length),
                this.text += e)
            }
        }
        ,
        t.prototype.findPointBefore = function(t, e) {
            for (var n = 0, i = this.points; n < i.length; n++) {
                var r = i[n];
                r.node == t && t.childNodes[r.offset] == e && (r.pos = this.text.length)
            }
        }
        ,
        t.prototype.findPointIn = function(t, e) {
            for (var n = 0, i = this.points; n < i.length; n++) {
                var r = i[n];
                r.node == t && (r.pos = this.text.length + Math.min(r.offset, e))
            }
        }
        ,
        t
    }();
    function Ce(t) {
        return 1 == t.nodeType && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName)
    }
    var Pe = function() {
        return function(t, e) {
            this.node = t,
            this.offset = e,
            this.pos = -1
        }
    }();
    var De = function() {
        function t(t, e) {
            for (var n = [], i = 2; i < arguments.length; i++)
                n[i - 2] = arguments[i];
            var r = this;
            this.pluginViews = [],
            this.scheduledDecoUpdate = -1,
            this._state = t,
            this.dispatch = e || function(t) {
                return r.updateState([t], t.apply())
            }
            ,
            this.contentDOM = document.createElement("pre"),
            this.contentDOM.className = "CodeMirror-content",
            this.contentDOM.style.cssText = Ve,
            this.contentDOM.setAttribute("contenteditable", "true"),
            this.contentDOM.setAttribute("spellcheck", "false"),
            this.dom = document.createElement("div"),
            this.dom.style.cssText = Ee,
            this.dom.className = "CodeMirror",
            this.dom.appendChild(this.contentDOM),
            this.docView = new ae(this.contentDOM,{
                onDOMChange: function(t, e, n) {
                    return Oe(r, t, e, n)
                },
                onSelectionChange: function() {
                    return function(t) {
                        var e = function(t) {
                            var e = Tt(t.contentDOM).getSelection()
                              , n = t.docView.posFromDOM(e.focusNode, e.focusOffset)
                              , i = Nt(e) ? n : t.docView.posFromDOM(e.anchorNode, e.anchorOffset);
                            return g.single(i, n)
                        }(t);
                        if (!t.state.selection.eq(e)) {
                            var n = t.state.transaction.setSelection(e);
                            t.inputState.lastSelectionTime > Date.now() - 50 && (n = n.setMeta(P.origin, t.inputState.lastSelectionOrigin),
                            "keyboard" == t.inputState.lastSelectionOrigin && (n = n.scrollIntoView())),
                            t.dispatch(n)
                        }
                        t.inputState.lastSelectionTime = 0
                    }(r)
                },
                onUpdateState: function(t, e) {
                    for (var n = 0, i = r.pluginViews; n < i.length; n++) {
                        var o = i[n];
                        o.updateState && o.updateState(r, t, e)
                    }
                },
                onUpdateDOM: function() {
                    for (var t = 0, e = r.pluginViews; t < e.length; t++) {
                        var n = e[t];
                        n.updateDOM && n.updateDOM(r)
                    }
                },
                onUpdateViewport: function() {
                    for (var t = 0, e = r.pluginViews; t < e.length; t++) {
                        var n = e[t];
                        n.updateViewport && n.updateViewport(r)
                    }
                },
                getDecorations: function() {
                    return r.pluginViews.map(function(t) {
                        return t.decorations || nt.none
                    })
                }
            }),
            this.viewport = this.docView.publicViewport,
            this.createPluginViews(n),
            this.inputState = new be(this),
            this.docView.update(t)
        }
        return Object.defineProperty(t.prototype, "state", {
            get: function() {
                return this._state
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setState = function(t) {
            for (var e = [], n = 1; n < arguments.length; n++)
                e[n - 1] = arguments[n];
            this._state = t,
            this.docView.update(t),
            this.inputState.updateCustomHandlers(this),
            this.createPluginViews(e)
        }
        ,
        t.prototype.updateState = function(t, e) {
            if (t.length && t[0].startState != this._state)
                throw new RangeError("Trying to update state with a transaction that doesn't start from the current state.");
            var n = this._state;
            this._state = e,
            this.docView.update(e, n, t, t.some(function(t) {
                return t.scrolledIntoView
            }) ? e.selection.primary.head : -1)
        }
        ,
        t.prototype.someProp = function(t, e) {
            for (var n = void 0, i = 0, r = this.pluginViews; i < r.length; i++) {
                var o = r[i][t];
                if (null != o && null != (n = e(o)))
                    break
            }
            return n
        }
        ,
        t.prototype.getProp = function(t) {
            for (var e = 0, n = this.pluginViews; e < n.length; e++) {
                var i = n[e][t];
                if (null != i)
                    return i
            }
        }
        ,
        t.prototype.createPluginViews = function(t) {
            this.destroyPluginViews();
            for (var e = 0, n = t; e < n.length; e++) {
                var i = n[e];
                this.pluginViews.push(i)
            }
            for (var r = 0, o = this.state.plugins; r < o.length; r++) {
                (i = o[r]).view && this.pluginViews.push(i.view(this))
            }
        }
        ,
        t.prototype.destroyPluginViews = function() {
            for (var t = 0, e = this.pluginViews; t < e.length; t++) {
                var n = e[t];
                n.destroy && n.destroy()
            }
            this.pluginViews.length = 0
        }
        ,
        t.prototype.domAtPos = function(t) {
            return this.docView.domFromPos(t)
        }
        ,
        t.prototype.heightAtPos = function(t, e) {
            return this.docView.heightAt(t, e ? -1 : 1)
        }
        ,
        Object.defineProperty(t.prototype, "contentHeight", {
            get: function() {
                return this.docView.heightMap.height + this.docView.paddingTop + this.docView.paddingBottom
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.decorationUpdate = function() {
            var t = this;
            this.scheduledDecoUpdate < 0 && (this.scheduledDecoUpdate = requestAnimationFrame(function() {
                t.scheduledDecoUpdate = -1,
                t.docView.update(t.state, t.state)
            }))
        }
        ,
        t.prototype.hasFocus = function() {
            return Tt(this.dom).activeElement == this.contentDOM
        }
        ,
        t.prototype.focus = function() {
            this.docView.focus()
        }
        ,
        t.prototype.destroy = function() {
            this.destroyPluginViews(),
            this.dom.remove(),
            this.docView.destroy()
        }
        ,
        t
    }();
    for (var Ee = "\nposition: relative;\ndisplay: flex;\nalign-items: flex-start;", Ve = "\nmargin: 0;\nflex-grow: 2;\nmin-height: 100%;", Le = {
        8: "Backspace",
        9: "Tab",
        10: "Enter",
        12: "NumLock",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        44: "PrintScreen",
        45: "Insert",
        46: "Delete",
        59: ";",
        61: "=",
        91: "Meta",
        92: "Meta",
        106: "*",
        107: "+",
        108: ",",
        109: "-",
        110: ".",
        111: "/",
        144: "NumLock",
        145: "ScrollLock",
        160: "Shift",
        161: "Shift",
        162: "Control",
        163: "Control",
        164: "Alt",
        165: "Alt",
        173: "-",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'",
        229: "q"
    }, Te = Le, Ne = {
        48: ")",
        49: "!",
        50: "@",
        51: "#",
        52: "$",
        53: "%",
        54: "^",
        55: "&",
        56: "*",
        57: "(",
        59: ";",
        61: "+",
        173: "_",
        186: ":",
        187: "+",
        188: "<",
        189: "_",
        190: ">",
        191: "?",
        192: "~",
        219: "{",
        220: "|",
        221: "}",
        222: '"',
        229: "Q"
    }, Be = "undefined" != typeof navigator && /Chrome\/(\d+)/.exec(navigator.userAgent), Re = "undefined" != typeof navigator && /Apple Computer/.test(navigator.vendor), Ie = "undefined" != typeof navigator && /Gecko\/\d+/.test(navigator.userAgent), ze = "undefined" != typeof navigator && /Mac/.test(navigator.platform), je = Be && (ze || +Be[1] < 57) || Ie && ze, He = 0; He < 10; He++)
        Le[48 + He] = Le[96 + He] = String(He);
    for (He = 1; He <= 24; He++)
        Le[He + 111] = "F" + He;
    for (He = 65; He <= 90; He++)
        Le[He] = String.fromCharCode(He + 32),
        Ne[He] = String.fromCharCode(He);
    for (var Fe in Le)
        Ne.hasOwnProperty(Fe) || (Ne[Fe] = Le[Fe]);
    var _e = function(t) {
        var e = !(je && (t.ctrlKey || t.altKey || t.metaKey) || Re && t.shiftKey && t.key && 1 == t.key.length) && t.key || (t.shiftKey ? Ne : Le)[t.keyCode] || t.key || "Unidentified";
        return "Esc" == e && (e = "Escape"),
        "Del" == e && (e = "Delete"),
        "Left" == e && (e = "ArrowLeft"),
        "Up" == e && (e = "ArrowUp"),
        "Right" == e && (e = "ArrowRight"),
        "Down" == e && (e = "ArrowDown"),
        e
    }
      , qe = "undefined" != typeof navigator && /Mac/.test(navigator.platform);
    function Ke(t) {
        var e = t.split(/-(?!$)/)
          , n = e[e.length - 1];
        "Space" == n && (n = " ");
        for (var i, r, o, s, a = 0; a < e.length - 1; ++a) {
            var h = e[a];
            if (/^(cmd|meta|m)$/i.test(h))
                s = !0;
            else if (/^a(lt)?$/i.test(h))
                i = !0;
            else if (/^(c|ctrl|control)$/i.test(h))
                r = !0;
            else if (/^s(hift)?$/i.test(h))
                o = !0;
            else {
                if (!/^mod$/i.test(h))
                    throw new Error("Unrecognized modifier name: " + h);
                qe ? s = !0 : r = !0
            }
        }
        return i && (n = "Alt-" + n),
        r && (n = "Ctrl-" + n),
        s && (n = "Meta-" + n),
        o && (n = "Shift-" + n),
        n
    }
    function Ue(t, e, n) {
        return e.altKey && (t = "Alt-" + t),
        e.ctrlKey && (t = "Ctrl-" + t),
        e.metaKey && (t = "Meta-" + t),
        !1 !== n && e.shiftKey && (t = "Shift-" + t),
        t
    }
    function We(t) {
        var e = function(t) {
            var e = function(t) {
                var e = Object.create(null);
                for (var n in t)
                    e[Ke(n)] = t[n];
                return e
            }(t);
            return function(t, n) {
                var i, r = _e(n), o = 1 == r.length && " " != r, s = e[Ue(r, n, !o)];
                if (s && s(t.state, t.dispatch, t))
                    return !0;
                if (o && (n.shiftKey || n.altKey || n.metaKey) && (i = Te[n.keyCode]) && i != r) {
                    var a = e[Ue(i, n, !0)];
                    if (a && a(t.state, t.dispatch, t))
                        return !0
                }
                return !1
            }
        }(t);
        return new w({
            view: function() {
                return {
                    handleDOMEvents: {
                        keydown: e
                    }
                }
            }
        })
    }
    var $e = function() {
        return function(t, e) {
            this.changes = t,
            this.inverted = e
        }
    }()
      , Ge = function() {
        return function(t) {
            this.map = t
        }
    }()
      , Qe = function() {
        function t(t, e) {
            this.maxLen = t,
            this.items = e
        }
        return t.empty = function(e) {
            return new t(e,[])
        }
        ,
        Object.defineProperty(t.prototype, "eventCount", {
            get: function() {
                for (var t = 0, e = this.items.length, n = 0; n < e; ++n)
                    this.items[n]instanceof $e && ++t;
                return t
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.isEmpty = function() {
            return 0 === this.items.length
        }
        ,
        t.prototype._checkLen = function(t) {
            return t.length > this.maxLen + 20 && (t = t.slice(t.length - this.maxLen - 1)),
            t
        }
        ,
        t.prototype.addChanges = function(e, n, i) {
            var r = this.items[this.items.length - 1];
            return r instanceof $e && i && n(r.changes[r.changes.length - 1], e.get(0)) ? new t(this.maxLen,this._checkLen(this.items.slice(0, -1).concat([new $e(r.changes.concat(e.changes),r.inverted.concat(e.inverted))]))) : this.pushEntry(new $e(e.changes,e.inverted))
        }
        ,
        t.prototype.pushEntry = function(e) {
            return new t(this.maxLen,this._checkLen(this.items.concat([e])))
        }
        ,
        t.prototype.popChanges = function() {
            var e;
            for (e = this.items.length - 1; this.items[e]instanceof Ge; --e)
                ;
            var n = this.items[e]
              , i = null;
            if (e < this.items.length - 1) {
                i = this.items[e + 1].map;
                for (var r = e + 2; r < this.items.length; ++r) {
                    var o = this.items[r];
                    i = i.concat(o.map)
                }
            }
            var s = i && e > 0 ? [new Ge(i)] : []
              , a = this._checkLen(this.items.slice(0, e).concat(s));
            return {
                changesEntry: n,
                newBranch: new t(this.maxLen,a),
                map: i
            }
        }
        ,
        t.prototype.rebase = function(e, n) {
            if (this.isEmpty())
                return this;
            for (var i = this.items.length, r = [], o = Math.max(0, i - n), s = e.length, a = this.eventCount, h = o, l = n; h < i; ++h) {
                var c = this.items[h]
                  , u = e.getMirror(--l);
                null != u ? (s = Math.min(s, u),
                c instanceof $e ? r.push(new $e([e.get(u)],[e.getInverted(u)])) : r.push(c)) : c instanceof $e && --a
            }
            var f = e.getMapping(n, s)
              , p = this._checkLen(this.items.slice(0, o).concat([new Ge(f)]).concat(r))
              , d = new t(this.maxLen,p);
            return p.length - a > 500 && (d = d.compress(i - r.length)),
            d
        }
        ,
        t.prototype.compress = function(e) {
            void 0 === e && (e = this.items.length);
            for (var n = [], i = null, r = 0; r < e; ++r) {
                var o = this.items[r];
                o instanceof Ge ? i = i ? i.concat(o.map) : o.map : (i && (n.push(new Ge(i)),
                i = null),
                n.push(o))
            }
            return i && (n.push(new Ge(i)),
            i = null),
            new t(this.maxLen,this.items.slice(0, e).concat(n))
        }
        ,
        t
    }()
      , Ye = function() {
        function t(t, e, n) {
            void 0 === n && (n = null),
            this.done = t,
            this.undone = e,
            this.prevTime = n
        }
        return t.prototype.resetTime = function() {
            return new t(this.done,this.undone)
        }
        ,
        t.prototype.addChanges = function(e, n, i, r) {
            return 0 == e.length ? this : new t(this.done.addChanges(e, n, null !== this.prevTime && i - this.prevTime < r),this.undone,i)
        }
        ,
        t.prototype.addMapping = function(e) {
            return this.done.isEmpty() ? this : new t(this.done.pushEntry(new Ge(e)),this.undone)
        }
        ,
        t.prototype.rebase = function(e, n) {
            return new t(this.done.rebase(e, n),this.undone.rebase(e, n),this.prevTime)
        }
        ,
        t.prototype.canPop = function(t) {
            return !(0 == t ? this.done : this.undone).isEmpty()
        }
        ,
        t.prototype.pop = function(e) {
            var n = (0 == e ? this.done : this.undone).popChanges();
            if (!n) {
                if (this.canPop(e))
                    throw new Error("LogicError: canPop returns true but pop fails");
                throw new Error("Shouldn't call pop if canPop returns false")
            }
            var i, r, o = n.newBranch, s = n.changesEntry, a = n.map;
            if (a) {
                var h = []
                  , l = [];
                r = [];
                for (var c = 0; c < s.changes.length; ++c) {
                    var u = s.changes[c]
                      , f = a.mapChange(s.inverted[c]);
                    a.deletesChange(u) || (h.unshift(a.mapChange(u)),
                    l.unshift(f)),
                    r.unshift(f)
                }
                i = new $e(l,h)
            } else
                r = s.inverted.slice().reverse(),
                i = new $e(r,s.changes.slice().reverse());
            var p = 0 == e ? this.undone : this.done;
            return i.changes.length > 0 && (p = p.pushEntry(i)),
            {
                changes: r,
                state: new t(0 == e ? o : p,0 == e ? p : o)
            }
        }
        ,
        t.empty = function(e) {
            return new t(Qe.empty(e),Qe.empty(e))
        }
        ,
        t
    }()
      , Je = function() {
        function t(t) {
            this.changes = t
        }
        return t.prototype.concat = function(e) {
            return new t(this.changes.concat(e.changes))
        }
        ,
        t.prototype.mapChange = function(t) {
            var e = this._map(t.from, 1);
            return new k(e,Math.max(e, this._map(t.to, -1)),t.text)
        }
        ,
        t.prototype.deletesChange = function(t) {
            return this._map(t.from, 1, !0) || this._map(t.from + t.text.length, -1, !0)
        }
        ,
        t.prototype._map = function(t, e, n) {
            void 0 === n && (n = !1);
            for (var i = 0, r = this.changes; i < r.length; i++) {
                var o = r[i]
                  , s = o.from;
                if (!(s > t)) {
                    var a = o.to - o.from
                      , h = o.text.length
                      , l = s + a;
                    if (t <= l) {
                        var c = a ? t == s ? -1 : t == l ? 1 : e : e;
                        if (n && (e < 0 ? t != s : t != l))
                            return !0;
                        t = s + (c < 0 ? 0 : h)
                    } else
                        t += h - a
                }
            }
            return !n && t
        }
        ,
        t.fromChanges = function(e) {
            return new t(e)
        }
        ,
        t
    }()
      , Xe = new P("historyState")
      , Ze = new P("historyClose")
      , tn = function() {
        function t(t, e, n) {
            void 0 === n && (n = []),
            this.changes = t,
            this.inverted = e,
            this.mirror = n,
            this.length = t.length
        }
        return t.prototype.get = function(t) {
            return this.changes[t]
        }
        ,
        t.prototype.getInverted = function(t) {
            return this.inverted[t]
        }
        ,
        t.prototype.getMirror = function(t) {
            for (var e = 0; e < this.mirror.length; e++)
                if (this.mirror[e] == t)
                    return this.mirror[e + (e % 2 ? -1 : 1)];
            return null
        }
        ,
        t.prototype.getMapping = function(t, e) {
            return Je.fromChanges(this.changes.slice(t, e))
        }
        ,
        t
    }();
    function en(t, e) {
        if (!t)
            return !0;
        var n = new S([t]);
        return e.from <= n.mapPos(t.to, 1) && e.to >= n.mapPos(t.from)
    }
    var nn = new y({
        init: function(t) {
            var e = t.getPluginWithField(nn).config.minDepth;
            return Ye.empty(e)
        },
        apply: function(t, e, n) {
            var i = t.getMeta(Xe);
            if (i)
                return i;
            var r = n.getPluginWithField(nn).config.newGroupDelay;
            t.getMeta(Ze) && (e = e.resetTime());
            var o;
            if (o = t.getMeta(P.rebased)) {
                var s = [t.startState.doc].concat(t.docs)
                  , a = t.changes.changes.map(function(t, e) {
                    return t.invert(s[e])
                });
                return e.rebase(new tn(t.changes.changes,a,t.changes.mirror), o)
            }
            if (!1 !== t.getMeta(P.addToHistory)) {
                var h = [t.startState.doc].concat(t.docs);
                a = t.changes.changes.map(function(t, e) {
                    return t.invert(h[e])
                });
                return e.addChanges(new tn(t.changes.changes,a), en, t.getMeta(P.time), r)
            }
            return e.addMapping(Je.fromChanges(t.changes.changes))
        },
        debugName: "historyState"
    });
    function rn(t, e, n) {
        var i = e.getField(nn);
        if (!i || !i.canPop(t))
            return !1;
        if (n) {
            for (var r = i.pop(t), o = r.changes, s = r.state, a = e.transaction.setMeta(Xe, s), h = 0, l = o; h < l.length; h++) {
                var c = l[h];
                a = a.change(c)
            }
            n(a)
        }
        return !0
    }
    function on(t, e) {
        return rn(1, t, e)
    }
    var sn = function() {
        function t(t, e) {
            this.spaceAbove = 0,
            this.lines = [],
            this.dom = document.createElement("div"),
            this.dom.className = "CodeMirror-gutter",
            this.dom.setAttribute("aria-hidden", "true"),
            this.dom.style.cssText = "left: 0; box-sizing: border-box; height: 100%; overflow: hidden; flex-shrink: 0;",
            !1 !== e.fixed && (this.dom.style.position = "sticky"),
            t.dom.insertBefore(this.dom, t.contentDOM),
            this.formatNumber = e.formatNumber || String,
            this.lastLine = new an(1,0,this.formatNumber),
            this.lastLine.dom.style.cssText += "visibility: hidden; pointer-events: none",
            this.dom.appendChild(this.lastLine.dom),
            this.updateDOM(t)
        }
        return t.prototype.updateDOM = function(t) {
            for (var e = 9; e < t.state.doc.lines; )
                e = 10 * e + 9;
            this.lastLine.update(e, 0, this.formatNumber),
            this.updateGutter(t)
        }
        ,
        t.prototype.updateGutter = function(t) {
            var e = this
              , n = t.heightAtPos(t.viewport.from, !0);
            n != this.spaceAbove && (this.spaceAbove = n,
            this.dom.style.paddingTop = n + "px");
            var i = 0
              , r = -1;
            for (t.viewport.forEachLine(function(n, o, s) {
                if (r < 0 && (r = t.state.doc.linePos(n).line),
                i == e.lines.length) {
                    var a = new an(r,s.height,e.formatNumber);
                    e.lines.push(a),
                    e.dom.appendChild(a.dom)
                } else
                    e.lines[i].update(r, s.height, e.formatNumber);
                r = s.hasCollapsedRanges ? -1 : r + 1,
                i++
            }); this.lines.length > i; )
                this.dom.removeChild(this.lines.pop().dom);
            this.dom.style.minHeight = t.contentHeight + "px"
        }
        ,
        t.prototype.destroy = function() {
            this.dom.remove()
        }
        ,
        t
    }()
      , an = function() {
        function t(t, e, n) {
            this.lineNo = -1,
            this.height = -1,
            this.dom = document.createElement("div"),
            this.dom.className = "CodeMirror-gutter-element",
            this.update(t, e, n)
        }
        return t.prototype.update = function(t, e, n) {
            this.lineNo != t && (this.lineNo = t,
            this.dom.textContent = n(t)),
            this.height != e && (this.height = e,
            this.dom.style.height = e + "px")
        }
        ,
        t
    }()
      , hn = function(t, e) {
        return e && e(t.transaction.setSelection(g.single(0)).scrollIntoView()),
        !0
    }
      , ln = function(t, e) {
        return e && e(t.transaction.setSelection(g.single(t.doc.length)).scrollIntoView()),
        !0
    }
      , cn = {
        "Mod-Home": hn,
        "Mod-End": ln,
        "Mod-a": function(t, e) {
            return e && e(t.transaction.setSelection(g.single(0, t.doc.length))),
            !0
        }
    }
      , un = {
        "Cmd-ArrowUp": hn,
        "Cmd-ArrowDown": ln
    };
    for (var fn in cn)
        un[fn] = cn[fn];
    var pn = ("undefined" != typeof navigator ? /Mac/.test(navigator.platform) : "undefined" != typeof os && "darwin" == os.platform()) ? un : cn;
    function dn(t, e, n, i, r) {
        null == e && -1 == (e = t.search(/[^\s\u00a0]/)) && (e = t.length);
        for (var o = i || 0, s = r || 0; ; ) {
            var a = t.indexOf("\t", o);
            if (a < 0 || a >= e)
                return s + (e - o);
            s += a - o,
            s += n - s % n,
            o = a + 1
        }
    }
    var gn = function() {
        function t(t, e, n) {
            this.string = t,
            this.tabSize = e,
            this.lineOracle = n,
            this.pos = this.start = 0,
            this.string = t,
            this.tabSize = e || 8,
            this.lastColumnPos = this.lastColumnValue = 0,
            this.lineStart = 0,
            this.lineOracle = n
        }
        return t.prototype.eol = function() {
            return this.pos >= this.string.length
        }
        ,
        t.prototype.sol = function() {
            return this.pos == this.lineStart
        }
        ,
        t.prototype.peek = function() {
            return this.string.charAt(this.pos) || void 0
        }
        ,
        t.prototype.next = function() {
            if (this.pos < this.string.length)
                return this.string.charAt(this.pos++)
        }
        ,
        t.prototype.eat = function(t) {
            var e = this.string.charAt(this.pos);
            if ("string" == typeof t ? e == t : e && (t instanceof RegExp ? t.test(e) : t(e)))
                return ++this.pos,
                e
        }
        ,
        t.prototype.eatWhile = function(t) {
            for (var e = this.pos; this.eat(t); )
                ;
            return this.pos > e
        }
        ,
        t.prototype.eatSpace = function() {
            for (var t = this.pos; /[\s\u00a0]/.test(this.string.charAt(this.pos)); )
                ++this.pos;
            return this.pos > t
        }
        ,
        t.prototype.skipToEnd = function() {
            this.pos = this.string.length
        }
        ,
        t.prototype.skipTo = function(t) {
            var e = this.string.indexOf(t, this.pos);
            if (e > -1)
                return this.pos = e,
                !0
        }
        ,
        t.prototype.backUp = function(t) {
            this.pos -= t
        }
        ,
        t.prototype.column = function() {
            return this.lastColumnPos < this.start && (this.lastColumnValue = dn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue),
            this.lastColumnPos = this.start),
            this.lastColumnValue - (this.lineStart ? dn(this.string, this.lineStart, this.tabSize) : 0)
        }
        ,
        t.prototype.indentation = function() {
            return dn(this.string, null, this.tabSize) - (this.lineStart ? dn(this.string, this.lineStart, this.tabSize) : 0)
        }
        ,
        t.prototype.match = function(t, e, n) {
            if ("string" == typeof t) {
                var i = function(t) {
                    return n ? t.toLowerCase() : t
                };
                return i(this.string.substr(this.pos, t.length)) == i(t) ? (!1 !== e && (this.pos += t.length),
                !0) : null
            }
            var r = this.string.slice(this.pos).match(t);
            return r && r.index > 0 ? null : (r && !1 !== e && (this.pos += r[0].length),
            r)
        }
        ,
        t.prototype.current = function() {
            return this.string.slice(this.start, this.pos)
        }
        ,
        t.prototype.hideFirstChars = function(t, e) {
            this.lineStart += t;
            try {
                return e()
            } finally {
                this.lineStart -= t
            }
        }
        ,
        t.prototype.lookAhead = function(t) {
            var e = this.lineOracle;
            return e && e.lookAhead(t)
        }
        ,
        t.prototype.baseToken = function() {
            var t = this.lineOracle;
            return t && t.baseToken(this.pos)
        }
        ,
        t
    }()
      , mn = function() {
        function t(t, e) {
            this.offset = e,
            this.iter = new h(t),
            this.curLineEnd = this.offset - 1
        }
        return t.prototype.next = function() {
            var t = this.iter.next()
              , e = new gn(t);
            return this.offset = this.curLineEnd + 1,
            this.curLineEnd += t.length + 1,
            e
        }
        ,
        t
    }();
    function vn(t, e, n) {
        for (var i = 0; i < 10; i++) {
            var r = t.token(e, n);
            if (e.pos > e.start)
                return r
        }
        throw new Error("Mode " + t.name + " failed to advance stream.")
    }
    function yn(t, e) {
        if (!0 === e)
            return e;
        if (t.copyState)
            return t.copyState(e);
        var n = {};
        for (var i in e) {
            var r = e[i];
            r instanceof Array && (r = r.concat([])),
            n[i] = r
        }
        return n
    }
    var wn = function() {
        function t(t, e) {
            this.state = t,
            this.pos = e
        }
        return t.prototype.copy = function(e) {
            return new t(yn(e, this.state),this.pos)
        }
        ,
        t
    }()
      , bn = function() {
        function t(t, e) {
            this.states = t,
            this.frontier = e
        }
        return t.prototype.getDecorations = function(t, e, n, i) {
            for (var r = this.getState(t, e, i), o = new mn(t.iterRange(e, n),e), s = [], a = [], h = o.next(), l = 0, c = e; c < n; )
                if (h.eol())
                    c++,
                    h = o.next(),
                    ++l % 5 == 0 && s.push(new wn(yn(i, r),c));
                else {
                    var u = vn(i, h, r)
                      , f = h.pos - h.start;
                    u && a.push(nt.range(c, c + f, {
                        class: "cm-" + u.replace(/ /g, " cm-")
                    })),
                    h.start = h.pos,
                    c += f
                }
            return this.storeStates(e, n, s),
            a
        }
        ,
        t.prototype.storeStates = function(t, e, n) {
            var i, r = this.findIndex(t), o = this.findIndex(e);
            (i = this.states).splice.apply(i, [r, o - r].concat(n)),
            t < this.frontier && (this.frontier = Math.max(this.frontier, e))
        }
        ,
        t.prototype.findIndex = function(t) {
            for (var e = 0; e < this.states.length && this.states[e].pos < t; )
                e++;
            return e
        }
        ,
        t.prototype.stateBefore = function(t, e) {
            t > this.frontier && t - this.frontier < 2e4 && (t = this.frontier);
            var n = this.findIndex(t);
            return n < this.states.length && this.states[n].pos == t && n++,
            0 == n ? new wn(e.startState(),0) : this.states[n - 1].copy(e)
        }
        ,
        t.prototype.getState = function(t, e, n) {
            var i = this.stateBefore(e, n)
              , r = i.pos
              , o = i.state;
            if (r < e - 2e4 && (r = e,
            o = n.startState()),
            r < e) {
                for (var s = new mn(t.iterRange(r),r), a = s.next(), h = r, l = 0, c = []; r < e; )
                    a.eol() ? (a = s.next(),
                    r++,
                    ++l % 50 && c.push(new wn(yn(n, o),r))) : (vn(n, a, o),
                    r += a.pos - a.start,
                    a.start = a.pos);
                this.storeStates(h, e, c)
            }
            return o
        }
        ,
        t.prototype.apply = function(e) {
            if (0 == e.changes.length)
                return this;
            for (var n = e.changes.changes.reduce(function(t, e) {
                return Math.min(t, e.from)
            }, 1e9), i = [], r = 0, o = this.states; r < o.length; r++) {
                var s = o[r]
                  , a = e.changes.mapPos(s.pos, -1, !0);
                a > 0 && i.push(a == s.pos ? s : new wn(s.state,a))
            }
            return new t(i,Math.min(n, this.frontier))
        }
        ,
        t
    }();
    var xn = function(t) {
        var e = new y({
            init: function(t) {
                return new bn([],0)
            },
            apply: function(t, e) {
                return e.apply(t)
            },
            debugName: "mode"
        })
          , n = new w({
            state: e,
            view: function(n) {
                var i = nt.none
                  , r = -1
                  , o = -1;
                function s(n, s) {
                    var a = n.viewport;
                    (s || a.from < r || a.to > o) && (r = a.from,
                    o = a.to,
                    i = nt.set(n.state.getField(e).getDecorations(n.state.doc, r, o, t)))
                }
                return {
                    get decorations() {
                        return i
                    },
                    updateViewport: s,
                    updateState: function(t, e, n) {
                        return s(t, n.some(function(t) {
                            return t.docChanged
                        }))
                    }
                }
            }
        });
        return n.indentation = function(n, i) {
            if (!t.indent)
                return -1;
            var r = n.getField(e).getState(n.doc, i, t);
            return t.indent(r, n.doc.slice(i, n.doc.lineEndAt(i)).match(/^\s*(.*)/)[1])
        }
        ,
        n
    }(function(t, e) {
        var n, i, r = t.indentUnit, o = e.statementIndent, s = e.jsonld, a = e.json || s, h = e.typescript, l = e.wordCharacters || /[\w$\xa1-\uffff]/, c = function() {
            function t(t) {
                return {
                    type: t,
                    style: "keyword"
                }
            }
            var e = t("keyword a")
              , n = t("keyword b")
              , i = t("keyword c")
              , r = t("keyword d")
              , o = t("operator")
              , s = {
                type: "atom",
                style: "atom"
            };
            return {
                if: t("if"),
                while: e,
                with: e,
                else: n,
                do: n,
                try: n,
                finally: n,
                return: r,
                break: r,
                continue: r,
                new: t("new"),
                delete: i,
                void: i,
                throw: i,
                debugger: t("debugger"),
                var: t("var"),
                const: t("var"),
                let: t("var"),
                function: t("function"),
                catch: t("catch"),
                for: t("for"),
                switch: t("switch"),
                case: t("case"),
                default: t("default"),
                in: o,
                typeof: o,
                instanceof: o,
                true: s,
                false: s,
                null: s,
                undefined: s,
                NaN: s,
                Infinity: s,
                this: t("this"),
                class: t("class"),
                super: t("atom"),
                yield: i,
                export: t("export"),
                import: t("import"),
                extends: i,
                await: i
            }
        }(), u = /[+\-*&%=<>!?|~^@]/, f = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)"/;
        function p(t, e, r) {
            return n = t,
            i = r,
            e
        }
        function d(t, e) {
            var n = t.next();
            if ('"' == n || "'" == n)
                return e.tokenize = (o = n,
                function(t, e) {
                    var n, i = !1;
                    if (s && "@" == t.peek() && t.match(f))
                        return e.tokenize = d,
                        p("jsonld-keyword", "meta");
                    for (; null != (n = t.next()) && (n != o || i); )
                        i = !i && "\\" == n;
                    return i || (e.tokenize = d),
                    p("string", "string")
                }
                ),
                e.tokenize(t, e);
            if ("." == n && t.match(/^\d+(?:[eE][+\-]?\d+)?/))
                return p("number", "number");
            if ("." == n && t.match(".."))
                return p("spread", "meta");
            if (/[\[\]{}\(\),;\:\.]/.test(n))
                return p(n);
            if ("=" == n && t.eat(">"))
                return p("=>", "operator");
            if ("0" == n && t.eat(/x/i))
                return t.eatWhile(/[\da-f]/i),
                p("number", "number");
            if ("0" == n && t.eat(/o/i))
                return t.eatWhile(/[0-7]/i),
                p("number", "number");
            if ("0" == n && t.eat(/b/i))
                return t.eatWhile(/[01]/i),
                p("number", "number");
            if (/\d/.test(n))
                return t.match(/^\d*(?:\.\d*)?(?:[eE][+\-]?\d+)?/),
                p("number", "number");
            if ("/" == n)
                return t.eat("*") ? (e.tokenize = g,
                g(t, e)) : t.eat("/") ? (t.skipToEnd(),
                p("comment", "comment")) : Ht(t, e, 1) ? (function(t) {
                    for (var e, n = !1, i = !1; null != (e = t.next()); ) {
                        if (!n) {
                            if ("/" == e && !i)
                                return;
                            "[" == e ? i = !0 : i && "]" == e && (i = !1)
                        }
                        n = !n && "\\" == e
                    }
                }(t),
                t.match(/^\b(([gimyu])(?![gimyu]*\2))+\b/),
                p("regexp", "string-2")) : (t.eat("="),
                p("operator", "operator", t.current()));
            if ("`" == n)
                return e.tokenize = m,
                m(t, e);
            if ("#" == n)
                return t.skipToEnd(),
                p("error", "error");
            if (u.test(n))
                return ">" == n && e.lexical && ">" == e.lexical.type || (t.eat("=") ? "!" != n && "=" != n || t.eat("=") : /[<>*+\-]/.test(n) && (t.eat(n),
                ">" == n && t.eat(n))),
                p("operator", "operator", t.current());
            if (l.test(n)) {
                t.eatWhile(l);
                var i = t.current();
                if ("." != e.lastType) {
                    if (c.propertyIsEnumerable(i)) {
                        var r = c[i];
                        return p(r.type, r.style, i)
                    }
                    if ("async" == i && t.match(/^(\s|\/\*.*?\*\/)*[\(\w]/, !1))
                        return p("async", "keyword", i)
                }
                return p("variable", "variable", i)
            }
            var o
        }
        function g(t, e) {
            for (var n, i = !1; n = t.next(); ) {
                if ("/" == n && i) {
                    e.tokenize = d;
                    break
                }
                i = "*" == n
            }
            return p("comment", "comment")
        }
        function m(t, e) {
            for (var n, i = !1; null != (n = t.next()); ) {
                if (!i && ("`" == n || "$" == n && t.eat("{"))) {
                    e.tokenize = d;
                    break
                }
                i = !i && "\\" == n
            }
            return p("quasi", "string-2", t.current())
        }
        var v = "([{}])";
        function y(t, e) {
            e.fatArrowAt && (e.fatArrowAt = null);
            var n = t.string.indexOf("=>", t.start);
            if (!(n < 0)) {
                if (h) {
                    var i = /:\s*(?:\w+(?:<[^>]*>|\[\])?|\{[^}]*\})\s*$/.exec(t.string.slice(t.start, n));
                    i && (n = i.index)
                }
                for (var r = 0, o = !1, s = n - 1; s >= 0; --s) {
                    var a = t.string.charAt(s)
                      , c = v.indexOf(a);
                    if (c >= 0 && c < 3) {
                        if (!r) {
                            ++s;
                            break
                        }
                        if (0 == --r) {
                            "(" == a && (o = !0);
                            break
                        }
                    } else if (c >= 3 && c < 6)
                        ++r;
                    else if (l.test(a))
                        o = !0;
                    else {
                        if (/["'\/]/.test(a))
                            return;
                        if (o && !r) {
                            ++s;
                            break
                        }
                    }
                }
                o && !r && (e.fatArrowAt = s)
            }
        }
        var w = {
            atom: !0,
            number: !0,
            variable: !0,
            string: !0,
            regexp: !0,
            this: !0,
            "jsonld-keyword": !0
        };
        function b(t, e, n, i, r, o) {
            this.indented = t,
            this.column = e,
            this.type = n,
            this.prev = r,
            this.info = o,
            null != i && (this.align = i)
        }
        function x(t, e) {
            for (var n = t.localVars; n; n = n.next)
                if (n.name == e)
                    return !0;
            for (var i = t.context; i; i = i.prev)
                for (n = i.vars; n; n = n.next)
                    if (n.name == e)
                        return !0
        }
        var k = {
            state: null,
            column: null,
            marked: null,
            cc: null
        };
        function S() {
            for (var t = arguments.length - 1; t >= 0; t--)
                k.cc.push(arguments[t])
        }
        function M() {
            return S.apply(null, arguments),
            !0
        }
        function O(t) {
            function n(e) {
                for (var n = e; n; n = n.next)
                    if (n.name == t)
                        return !0;
                return !1
            }
            var i = k.state;
            if (k.marked = "def",
            i.context) {
                if (n(i.localVars))
                    return;
                i.localVars = {
                    name: t,
                    next: i.localVars
                }
            } else {
                if (n(i.globalVars))
                    return;
                e.globalVars && (i.globalVars = {
                    name: t,
                    next: i.globalVars
                })
            }
        }
        function A(t) {
            return "public" == t || "private" == t || "protected" == t || "abstract" == t || "readonly" == t
        }
        var C = {
            name: "this",
            next: {
                name: "arguments"
            }
        };
        function P() {
            k.state.context = {
                prev: k.state.context,
                vars: k.state.localVars
            },
            k.state.localVars = C
        }
        function D() {
            k.state.localVars = k.state.context.vars,
            k.state.context = k.state.context.prev
        }
        function E(t, e) {
            var n = function() {
                var n = k.state
                  , i = n.indented;
                if ("stat" == n.lexical.type)
                    i = n.lexical.indented;
                else
                    for (var r = n.lexical; r && ")" == r.type && r.align; r = r.prev)
                        i = r.indented;
                n.lexical = new b(i,k.stream.column(),t,null,n.lexical,e)
            };
            return n.lex = !0,
            n
        }
        function V() {
            var t = k.state;
            t.lexical.prev && (")" == t.lexical.type && (t.indented = t.lexical.indented),
            t.lexical = t.lexical.prev)
        }
        V.lex = !0;
        function L(t) {
            function e(n) {
                return n == t ? M() : ";" == t ? S() : M(e)
            }
            return e
        }
        function T(t, e) {
            return "var" == t ? M(E("vardef", e.length), ft, L(";"), V) : "keyword a" == t ? M(E("form"), R, T, V) : "keyword b" == t ? M(E("form"), T, V) : "keyword d" == t ? k.stream.match(/^\s*$/, !1) ? M() : M(E("stat"), z, L(";"), V) : "debugger" == t ? M(L(";")) : "{" == t ? M(E("}"), tt, V) : ";" == t ? M() : "if" == t ? ("else" == k.state.lexical.info && k.state.cc[k.state.cc.length - 1] == V && k.state.cc.pop()(),
            M(E("form"), R, T, V, vt)) : "function" == t ? M(St) : "for" == t ? M(E("form"), yt, T, V) : "class" == t || h && "interface" == e ? (k.marked = "keyword",
            M(E("form"), At, V)) : "variable" == t ? h && "declare" == e ? (k.marked = "keyword",
            M(T)) : h && ("module" == e || "enum" == e || "type" == e) && k.stream.match(/^\s*\w/, !1) ? (k.marked = "keyword",
            "enum" == e ? M(zt) : "type" == e ? M(rt, L("operator"), rt, L(";")) : M(E("form"), pt, L("{"), E("}"), tt, V, V)) : h && "namespace" == e ? (k.marked = "keyword",
            M(E("form"), N, tt, V)) : h && "abstract" == e ? (k.marked = "keyword",
            M(T)) : M(E("stat"), $) : "switch" == t ? M(E("form"), R, L("{"), E("}", "switch"), tt, V, V) : "case" == t ? M(N, L(":")) : "default" == t ? M(L(":")) : "catch" == t ? M(E("form"), P, L("("), Mt, L(")"), T, V, D) : "export" == t ? M(E("stat"), Et, V) : "import" == t ? M(E("stat"), Lt, V) : "async" == t ? M(T) : "@" == e ? M(N, T) : S(E("stat"), N, L(";"), V)
        }
        function N(t, e) {
            return I(t, e, !1)
        }
        function B(t, e) {
            return I(t, e, !0)
        }
        function R(t) {
            return "(" != t ? S() : M(E(")"), N, L(")"), V)
        }
        function I(t, e, n) {
            if (k.state.fatArrowAt == k.stream.start) {
                var i = n ? K : q;
                if ("(" == t)
                    return M(P, E(")"), X(Mt, ")"), V, L("=>"), i, D);
                if ("variable" == t)
                    return S(P, pt, L("=>"), i, D)
            }
            var r = n ? H : j;
            if (w.hasOwnProperty(t))
                return M(r);
            if ("function" == t)
                return M(St, r);
            if ("class" == t || h && "interface" == e)
                return k.marked = "keyword",
                M(E("form"), Ot, V);
            if ("keyword c" == t || "async" == t)
                return M(n ? B : N);
            if ("(" == t)
                return M(E(")"), z, L(")"), V, r);
            if ("operator" == t || "spread" == t)
                return M(n ? B : N);
            if ("[" == t)
                return M(E("]"), It, V, r);
            if ("{" == t)
                return Z(Q, "}", null, r);
            if ("quasi" == t)
                return S(F, r);
            if ("new" == t)
                return M((o = n,
                function(t) {
                    return "." == t ? M(o ? W : U) : "variable" == t && h ? M(lt, o ? H : j) : S(o ? B : N)
                }
                ));
            var o;
            return "import" == t ? M(N) : M()
        }
        function z(t) {
            return t.match(/[;\}\)\],]/) ? S() : S(N)
        }
        function j(t, e) {
            return "," == t ? M(N) : H(t, e, !1)
        }
        function H(t, e, n) {
            var i = 0 == n ? j : H
              , r = 0 == n ? N : B;
            return "=>" == t ? M(P, n ? K : q, D) : "operator" == t ? /\+\+|--/.test(e) || h && "!" == e ? M(i) : h && "<" == e && k.stream.match(/^([^>]|<.*?>)*>\s*\(/, !1) ? M(E(">"), X(rt, ">"), V, i) : "?" == e ? M(N, L(":"), r) : M(r) : "quasi" == t ? S(F, i) : ";" != t ? "(" == t ? Z(B, ")", "call", i) : "." == t ? M(G, i) : "[" == t ? M(E("]"), z, L("]"), V, i) : h && "as" == e ? (k.marked = "keyword",
            M(rt, i)) : "regexp" == t ? (k.state.lastType = k.marked = "operator",
            k.stream.backUp(k.stream.pos - k.stream.start - 1),
            M(r)) : void 0 : void 0
        }
        function F(t, e) {
            return "quasi" != t ? S() : "${" != e.slice(e.length - 2) ? M(F) : M(N, _)
        }
        function _(t) {
            if ("}" == t)
                return k.marked = "string-2",
                k.state.tokenize = m,
                M(F)
        }
        function q(t) {
            return y(k.stream, k.state),
            S("{" == t ? T : N)
        }
        function K(t) {
            return y(k.stream, k.state),
            S("{" == t ? T : B)
        }
        function U(t, e) {
            if ("target" == e)
                return k.marked = "keyword",
                M(j)
        }
        function W(t, e) {
            if ("target" == e)
                return k.marked = "keyword",
                M(H)
        }
        function $(t) {
            return ":" == t ? M(V, T) : S(j, L(";"), V)
        }
        function G(t) {
            if ("variable" == t)
                return k.marked = "property",
                M()
        }
        function Q(t, e) {
            if ("async" == t)
                return k.marked = "property",
                M(Q);
            if ("variable" == t || "keyword" == k.style) {
                if (k.marked = "property",
                "get" == e || "set" == e)
                    return M(Y);
                var n;
                return h && k.state.fatArrowAt == k.stream.start && (n = k.stream.match(/^\s*:\s*/, !1)) && (k.state.fatArrowAt = k.stream.pos + n[0].length),
                M(J)
            }
            return "number" == t || "string" == t ? (k.marked = s ? "property" : k.style + " property",
            M(J)) : "jsonld-keyword" == t ? M(J) : h && A(e) ? (k.marked = "keyword",
            M(Q)) : "[" == t ? M(N, et, L("]"), J) : "spread" == t ? M(B, J) : "*" == e ? (k.marked = "keyword",
            M(Q)) : ":" == t ? S(J) : void 0
        }
        function Y(t) {
            return "variable" != t ? S(J) : (k.marked = "property",
            M(St))
        }
        function J(t) {
            return ":" == t ? M(B) : "(" == t ? S(St) : void 0
        }
        function X(t, e, n) {
            function i(r, o) {
                if (n ? n.indexOf(r) > -1 : "," == r) {
                    var s = k.state.lexical;
                    return "call" == s.info && (s.pos = (s.pos || 0) + 1),
                    M(function(n, i) {
                        return n == e || i == e ? S() : S(t)
                    }, i)
                }
                return r == e || o == e ? M() : M(L(e))
            }
            return function(n, r) {
                return n == e || r == e ? M() : S(t, i)
            }
        }
        function Z(t, e, n) {
            for (var i = 3; i < arguments.length; i++)
                k.cc.push(arguments[i]);
            return M(E(e, n), X(t, e), V)
        }
        function tt(t) {
            return "}" == t ? M() : S(T, tt)
        }
        function et(t, e) {
            if (h) {
                if (":" == t)
                    return M(rt);
                if ("?" == e)
                    return M(et)
            }
        }
        function nt(t) {
            if (h && ":" == t)
                return k.stream.match(/^\s*\w+\s+is\b/, !1) ? M(N, it, rt) : M(rt)
        }
        function it(t, e) {
            if ("is" == e)
                return k.marked = "keyword",
                M()
        }
        function rt(t, e) {
            return "keyof" == e || "typeof" == e ? (k.marked = "keyword",
            M("keyof" == e ? rt : B)) : "variable" == t || "void" == e ? (k.marked = "type",
            M(ht)) : "string" == t || "number" == t || "atom" == t ? M(ht) : "[" == t ? M(E("]"), X(rt, "]", ","), V, ht) : "{" == t ? M(E("}"), X(st, "}", ",;"), V, ht) : "(" == t ? M(X(at, ")"), ot) : "<" == t ? M(X(rt, ">"), rt) : void 0
        }
        function ot(t) {
            if ("=>" == t)
                return M(rt)
        }
        function st(t, e) {
            return "variable" == t || "keyword" == k.style ? (k.marked = "property",
            M(st)) : "?" == e ? M(st) : ":" == t ? M(rt) : "[" == t ? M(N, et, L("]"), st) : void 0
        }
        function at(t, e) {
            return "variable" == t && k.stream.match(/^\s*[?:]/, !1) || "?" == e ? M(at) : ":" == t ? M(rt) : S(rt)
        }
        function ht(t, e) {
            return "<" == e ? M(E(">"), X(rt, ">"), V, ht) : "|" == e || "." == t || "&" == e ? M(rt) : "[" == t ? M(L("]"), ht) : "extends" == e || "implements" == e ? (k.marked = "keyword",
            M(rt)) : void 0
        }
        function lt(t, e) {
            if ("<" == e)
                return M(E(">"), X(rt, ">"), V, ht)
        }
        function ct() {
            return S(rt, ut)
        }
        function ut(t, e) {
            if ("=" == e)
                return M(rt)
        }
        function ft(t, e) {
            return "enum" == e ? (k.marked = "keyword",
            M(zt)) : S(pt, et, gt, mt)
        }
        function pt(t, e) {
            return h && A(e) ? (k.marked = "keyword",
            M(pt)) : "variable" == t ? (O(e),
            M()) : "spread" == t ? M(pt) : "[" == t ? Z(pt, "]") : "{" == t ? Z(dt, "}") : void 0
        }
        function dt(t, e) {
            return "variable" != t || k.stream.match(/^\s*:/, !1) ? ("variable" == t && (k.marked = "property"),
            "spread" == t ? M(pt) : "}" == t ? S() : M(L(":"), pt, gt)) : (O(e),
            M(gt))
        }
        function gt(t, e) {
            if ("=" == e)
                return M(B)
        }
        function mt(t) {
            if ("," == t)
                return M(ft)
        }
        function vt(t, e) {
            if ("keyword b" == t && "else" == e)
                return M(E("form", "else"), T, V)
        }
        function yt(t, e) {
            return "await" == e ? M(yt) : "(" == t ? M(E(")"), wt, L(")"), V) : void 0
        }
        function wt(t) {
            return "var" == t ? M(ft, L(";"), xt) : ";" == t ? M(xt) : "variable" == t ? M(bt) : S(N, L(";"), xt)
        }
        function bt(t, e) {
            return "in" == e || "of" == e ? (k.marked = "keyword",
            M(N)) : M(j, xt)
        }
        function xt(t, e) {
            return ";" == t ? M(kt) : "in" == e || "of" == e ? (k.marked = "keyword",
            M(N)) : S(N, L(";"), kt)
        }
        function kt(t) {
            ")" != t && M(N)
        }
        function St(t, e) {
            return "*" == e ? (k.marked = "keyword",
            M(St)) : "variable" == t ? (O(e),
            M(St)) : "(" == t ? M(P, E(")"), X(Mt, ")"), V, nt, T, D) : h && "<" == e ? M(E(">"), X(ct, ">"), V, St) : void 0
        }
        function Mt(t, e) {
            return "@" == e && M(N, Mt),
            "spread" == t ? M(Mt) : h && A(e) ? (k.marked = "keyword",
            M(Mt)) : S(pt, et, gt)
        }
        function Ot(t, e) {
            return "variable" == t ? At(t, e) : Ct(t, e)
        }
        function At(t, e) {
            if ("variable" == t)
                return O(e),
                M(Ct)
        }
        function Ct(t, e) {
            return "<" == e ? M(E(">"), X(ct, ">"), V, Ct) : "extends" == e || "implements" == e || h && "," == t ? ("implements" == e && (k.marked = "keyword"),
            M(h ? rt : N, Ct)) : "{" == t ? M(E("}"), Pt, V) : void 0
        }
        function Pt(t, e) {
            return "async" == t || "variable" == t && ("static" == e || "get" == e || "set" == e || h && A(e)) && k.stream.match(/^\s+[\w$\xa1-\uffff]/, !1) ? (k.marked = "keyword",
            M(Pt)) : "variable" == t || "keyword" == k.style ? (k.marked = "property",
            M(h ? Dt : St, Pt)) : "[" == t ? M(N, et, L("]"), h ? Dt : St, Pt) : "*" == e ? (k.marked = "keyword",
            M(Pt)) : ";" == t ? M(Pt) : "}" == t ? M() : "@" == e ? M(N, Pt) : void 0
        }
        function Dt(t, e) {
            return "?" == e ? M(Dt) : ":" == t ? M(rt, gt) : "=" == e ? M(B) : S(St)
        }
        function Et(t, e) {
            return "*" == e ? (k.marked = "keyword",
            M(Rt, L(";"))) : "default" == e ? (k.marked = "keyword",
            M(N, L(";"))) : "{" == t ? M(X(Vt, "}"), Rt, L(";")) : S(T)
        }
        function Vt(t, e) {
            return "as" == e ? (k.marked = "keyword",
            M(L("variable"))) : "variable" == t ? S(B, Vt) : void 0
        }
        function Lt(t) {
            return "string" == t ? M() : "(" == t ? S(N) : S(Tt, Nt, Rt)
        }
        function Tt(t, e) {
            return "{" == t ? Z(Tt, "}") : ("variable" == t && O(e),
            "*" == e && (k.marked = "keyword"),
            M(Bt))
        }
        function Nt(t) {
            if ("," == t)
                return M(Tt, Nt)
        }
        function Bt(t, e) {
            if ("as" == e)
                return k.marked = "keyword",
                M(Tt)
        }
        function Rt(t, e) {
            if ("from" == e)
                return k.marked = "keyword",
                M(N)
        }
        function It(t) {
            return "]" == t ? M() : S(X(B, "]"))
        }
        function zt() {
            return S(E("form"), pt, L("{"), E("}"), X(jt, "}"), V, V)
        }
        function jt() {
            return S(pt, gt)
        }
        function Ht(t, e, n) {
            return e.tokenize == d && /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\[{}\(,;:]|=>)$/.test(e.lastType) || "quasi" == e.lastType && /\{\s*$/.test(t.string.slice(0, t.pos - (n || 0)))
        }
        return {
            startState: function(t) {
                var n = {
                    tokenize: d,
                    lastType: "sof",
                    cc: [],
                    lexical: new b((t || 0) - r,0,"block",!1),
                    localVars: e.localVars,
                    context: e.localVars && {
                        vars: e.localVars
                    },
                    indented: t || 0
                };
                return e.globalVars && "object" == typeof e.globalVars && (n.globalVars = e.globalVars),
                n
            },
            token: function(t, e) {
                if (t.sol() && (e.lexical.hasOwnProperty("align") || (e.lexical.align = !1),
                e.indented = t.indentation(),
                y(t, e)),
                e.tokenize != g && t.eatSpace())
                    return null;
                var r = e.tokenize(t, e);
                return "comment" == n ? r : (e.lastType = "operator" != n || "++" != i && "--" != i ? n : "incdec",
                function(t, e, n, i, r) {
                    var o = t.cc;
                    for (k.state = t,
                    k.stream = r,
                    k.marked = null,
                    k.cc = o,
                    k.style = e,
                    t.lexical.hasOwnProperty("align") || (t.lexical.align = !0); ; )
                        if ((o.length ? o.pop() : a ? N : T)(n, i)) {
                            for (; o.length && o[o.length - 1].lex; )
                                o.pop()();
                            return k.marked ? k.marked : "variable" == n && x(t, i) ? "variable-2" : e
                        }
                }(e, r, n, i, t))
            },
            indent: function(t, n) {
                if (t.tokenize == g)
                    return -1;
                if (t.tokenize != d)
                    return 0;
                var i, s = n && n.charAt(0), a = t.lexical;
                if (!/^\s*else\b/.test(n))
                    for (var h = t.cc.length - 1; h >= 0; --h) {
                        var l = t.cc[h];
                        if (l == V)
                            a = a.prev;
                        else if (l != vt)
                            break
                    }
                for (; ("stat" == a.type || "form" == a.type) && ("}" == s || (i = t.cc[t.cc.length - 1]) && (i == j || i == H) && !/^[,\.=+\-*:?[\(]/.test(n)); )
                    a = a.prev;
                o && ")" == a.type && "stat" == a.prev.type && (a = a.prev);
                var c = a.type
                  , f = s == c;
                return "vardef" == c ? a.indented + ("operator" == t.lastType || "," == t.lastType ? a.info + 1 : 0) : "form" == c && "{" == s ? a.indented : "form" == c ? a.indented + r : "stat" == c ? a.indented + (p = t,
                m = n,
                "operator" == p.lastType || "," == p.lastType || u.test(m.charAt(0)) || /[,.]/.test(m.charAt(0)) ? o || r : 0) : "switch" != a.info || f || 0 == e.doubleIndentSwitch ? a.align ? a.column + (f ? 0 : 1) : a.indented + (f ? 0 : r) : a.indented + (/^(?:case|default)\b/.test(n) ? r : 2 * r);
                var p, m
            },
            electricInput: /^\s*(?:case .*?:|default:|\{|\})$/,
            blockCommentStart: a ? null : "/*",
            blockCommentEnd: a ? null : "*/",
            blockCommentContinue: a ? null : " * ",
            lineComment: a ? null : "//",
            fold: "brace",
            closeBrackets: "()[]{}''\"\"``",
            helperType: a ? "json" : "javascript",
            jsonldMode: s,
            jsonMode: a,
            expressionAllowed: Ht,
            skipExpression: function(t) {
                var e = t.cc[t.cc.length - 1];
                e != N && e != B || t.cc.pop()
            }
        }
    }({
        indentUnit: 2
    }, {}));
    var kn, Sn = V.create({
        doc: '"use strict";\nconst {readFile} = require("fs");\n\nreadFile("package.json", "utf8", (err, data) => {\n  console.log(data);\n});',
        plugins: [(kn = void 0,
        void 0 === kn && (kn = {}),
        new w({
            view: function(t) {
                return new sn(t,kn)
            }
        })), function(t) {
            var e = void 0 === t ? {} : t
              , n = e.minDepth
              , i = void 0 === n ? 100 : n
              , r = e.newGroupDelay;
            return new w({
                state: nn,
                config: {
                    minDepth: i,
                    newGroupDelay: void 0 === r ? 500 : r
                }
            })
        }(), xn, We(pn), We({
            "Mod-z": function(t, e) {
                return rn(0, t, e)
            },
            "Mod-Shift-z": on,
            "Ctrl-y": /Mac/.test(navigator.platform) ? void 0 : on,
            Enter: function(t, e) {
                if (e) {
                    var n = xn.indentation(t, t.selection.primary.from);
                    n > -1 && e(t.transaction.replaceSelection("\n" + " ".repeat(n)).scrollIntoView())
                }
                return !0
            },
            "Shift-Tab": function(t, e) {
                if (e) {
                    var n = t.selection.primary.head
                      , i = t.doc.lineStartAt(n)
                      , r = t.doc.slice(i, n + 100)
                      , o = /^ */.exec(r)[0].length
                      , s = xn.indentation(t, i);
                    -1 == s && (s = o);
                    var a = t.transaction.replace(i, i + o, " ".repeat(s)).scrollIntoView();
                    n <= i + o && (a = a.setSelection(g.single(i + s))),
                    e(a)
                }
                return !0
            }
        })]
    }),
    Mn = window.view = new De(Sn),
    On1 = document.querySelector("#email_template"),
    On2 = document.querySelector("#map");

    On1.parentNode.replaceChild(Mn.dom, On1);
    On2.parentNode.replaceChild(Mn.dom, On2);
});
